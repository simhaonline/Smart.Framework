<!-- Pagebuilder / Manage @ List / Records :: v.20200717 -->
<style>
	.smartGrid_AlignCenter {
		text-align: center;
	}
	.smartGrid_AlignRight {
		text-align: right;
	}
	.smartGrid_Important {
		font-weight: bold;
	}
	.smartGrid_column_UUID {
		color: #999999;
		text-align: center;
	}
	.smartGrid_HeadHighlight {
		background-color: #999999 !important;
		color: #FFFFFF !important;
	}
</style>
<link rel="stylesheet" type="text/css" href="lib/js/jquery/pager/simplePagination.css">
<script type="text/javascript" src="lib/js/jquery/pager/jquery.simplePagination.js"></script>
<script type="text/javascript" src="lib/js/jquery/jquery.event.drag.js"></script>
<script type="text/javascript" src="lib/js/jquery/jquery.event.drop.js"></script>
<script type="text/javascript" src="lib/js/jquery/jquery.simulate.js"></script>
<link rel="stylesheet" type="text/css" href="lib/js/jquery/slickgrid/slick.grid.css">
<link rel="stylesheet" type="text/css" href="lib/js/jquery/slickgrid/slick.grid-fixes.css">
<script type="text/javascript" src="lib/js/jquery/slickgrid/slick.grid.js"></script>
<script type="text/javascript" src="lib/js/jquery/slickgrid/slick.editors.js"></script>
<script type="text/javascript" src="lib/js/jquery/slickgrid/smart-grid.js"></script>
<script type="text/javascript">
	var IdOfGrid = 'PageBuilderSlickGrid';
	var TheGrid = new Smart_Grid(IdOfGrid, 'infoTotalRows', '[###LIST-JSON-URL|js###]', 'PageBuilder_Smart_Slickgrid_List', 'id', 'DESC', '', 'filtering');
</script>
<script type="text/javascript">
function pageBuilderFormBtnFilter() {
	TheGrid.loadGridData(0);
}
function pageBuilderFormBtnResetFilter() {
	TheGrid.resetGrid();
	TheGrid.loadGridData(0);
}
</script>
[@@@SUB-TEMPLATE:view-list-filter-form.mtpl.inc.htm@@@]
<div style="padding-left:5px;">
	<div id="PageBuilderNavPager"></div>
</div>
<form class="ux-form"><div id="PageBuilderSlickGrid" class="slickgrid-table" style="font-size:10px;width:100%;height:10px;"></div></form>
<script type="text/javascript">
jQuery(function() {

	var displayDel = function(row, cell, value, columnDef, dataContext) {
		var html = '';
		html += '<div align="center" style="padding-top:2px;">';
		[%%%IF:LIST-DELETE-URL:!=;%%%]
		html += '<a href="[###LIST-DELETE-URL|js###]' + SmartJS_CoreUtils.escape_url(value) + '" data-smart="open.modal">';
		html += '<img src="[###PATH-MODULE|html|js###]libs/views/manager/img/op-delete.svg" alt="Delete" title="Delete">';
		html += '</a>';
		[%%%ELSE:LIST-DELETE-URL%%%]
		html += '&nbsp;';
		[%%%/IF:LIST-DELETE-URL%%%]
		html += '</div>';
		return html;
	}

	var displayOps = function(row, cell, value, columnDef, dataContext) {
		value = String(value);
		var txt = 'Page Object';
		var img = 'type-page.svg';
		if(value.substr(0, 1) == '#') {
			txt = 'Segment Object';
			img = 'type-segment.svg';
		}
		var html = '';
		html += '<div align="center" style="padding-top:2px;">';
		[%%%IF:LIST-RECORD-URL:!=;%%%]
		html += '<a href="[###LIST-RECORD-URL|js###]' + SmartJS_CoreUtils.escape_url(value) + '" data-smart="open.modal" title="Display">';
		[%%%/IF:LIST-RECORD-URL%%%]
		html += '<img src="[###PATH-MODULE|html|js###]libs/views/manager/img/' + SmartJS_CoreUtils.escape_html(img) + '" alt="' + SmartJS_CoreUtils.escape_html(txt) + '" title="' + SmartJS_CoreUtils.escape_html(txt) + '">';
		[%%%IF:LIST-RECORD-URL:!=;%%%]
		html += '</a>';
		[%%%/IF:LIST-RECORD-URL%%%]
		html += '</div>';
		return html;
	}

	var displayCtrl = function(row, cell, value, columnDef, dataContext) {
		value = String(value);
		return '<span style="color:#778899;">' + SmartJS_CoreUtils.escape_html(value) + '</span>';
	}

	var displaySpecial = function(row, cell, value, columnDef, dataContext) {
		value = String(value);
		return '<span style="color:#F3973B;">&nbsp;' + SmartJS_CoreUtils.escape_html(value) + '&nbsp;</span>';
	}

	var displayID = function(row, cell, value, columnDef, dataContext) {
		value = String(value);
		var style = '';
		if(value.substr(0, 1) == '#') {
			style = ' font-style:italic;';
		}
		return '<div align="left" style="display:inline-block; padding-left:10px; padding-right:10px; padding-top:0px;' + style + '" title="' + SmartJS_CoreUtils.escape_html(dataContext['ref']) + '">' + SmartJS_CoreUtils.escape_html(value) + '</div>';
	}

	var displayCodeType = function(row, cell, value, columnDef, dataContext) {
		var img = 'syntax-unknown.svg';
		switch(String(value)) {
			case 'html':
				img = 'syntax-html.svg';
				break;
			case 'text':
				img = 'syntax-text.svg';
				break;
			case 'markdown':
				img = 'syntax-markdown.svg';
				break;
			case 'raw':
				img = 'syntax-raw.svg';
				break;
			case 'settings':
				img = 'syntax-settings.svg';
				break;
		}
		var fmtVal = value + ' / ' + dataContext['total_size'] + ' bytes';
		return '<div align="center" style="padding-top:2px;"><img src="[###PATH-MODULE|html|js###]libs/views/manager/img/' + img + '" alt="' + SmartJS_CoreUtils.escape_html(fmtVal) + '" title="' + SmartJS_CoreUtils.escape_html(fmtVal) + '"></div>';
	}

	var displayActive = function(row, cell, value, columnDef, dataContext) {
		var img = 'status-inactive.svg';
		var txt = 'Inactive Page';
		if(value == 1) {
			img = 'status-active.svg';
			txt = 'Active Page';
		}
		if(String(dataContext.id).substr(0, 1) == '#') {
			img = 'status-linked.svg';
			txt = 'All Segments are Active if used Programatically';
		}
		return '<div align="center" style="padding-top:2px;"><img src="[###PATH-MODULE|html|js###]libs/views/manager/img/' + img + '" alt="' + SmartJS_CoreUtils.escape_html(txt) + '" title="' + SmartJS_CoreUtils.escape_html(txt) + '"></div>';
	}

	var displayAuth = function(row, cell, value, columnDef, dataContext) {
		var img = 'restr-public.svg';
		var txt = 'Public Access';
		if(value == 1) {
			img = 'restr-private.svg';
			txt = 'Restricted Access (Login Required)';
		}
		if(String(dataContext.id).substr(0, 1) == '#') {
			img = 'restr-unknown.svg';
			txt = 'Unknown (Segments may be used in any context ...)';
		}
		return '<div align="center" style="padding-top:2px;"><img src="[###PATH-MODULE|html|js###]libs/views/manager/img/' + img + '" alt="' + SmartJS_CoreUtils.escape_html(txt) + '" title="' + SmartJS_CoreUtils.escape_html(txt) + '"></div>';
	}

	var displayTransl = function(row, cell, value, columnDef, dataContext) {
		var img = 'translatable-non.svg';
		var txt = 'Non-Translatable';
		if(value == 1) {
			img = 'translatable.svg';
			txt = 'Translatable';
		}
		return '<div align="center" style="padding-top:2px;"><img src="[###PATH-MODULE|html|js###]libs/views/manager/img/' + img + '" alt="' + SmartJS_CoreUtils.escape_html(txt) + '" title="' + SmartJS_CoreUtils.escape_html(txt) + '"></div>';
	}

	var displayName = function(row, cell, value, columnDef, dataContext) {
		value = String(value);
		return '<span style="color:#555555;">' + SmartJS_CoreUtils.escape_html(value) + '</span>';
	}

	var diffColSize = function(colName) {
		var szDiff = 0;
		[%%%IF:LIST-DELETE-URL:!=;%%%]
			szDiff = 50;
		[%%%/IF:LIST-DELETE-URL%%%]
		var size = parseInt(jQuery(window).width() - szDiff - 50 - 75 - 75 - 75 - 75 - 75 - 75) - 100;
		switch(String(colName)) {
			case 'ctrl':
				size = size * 0.25;
				break;
			case 'id':
				size = size * 0.25;
				break;
			case 'name':
				size = size * 0.50;
				break;
			default:
				size = size * 0;
		}
		size = Math.floor(size);
		if(size < 10) {
			size = 10;
		}
		return size;
	}

	// Grid Data Defs: defaultSortDir:1
	var columns = [
		[%%%IF:LIST-DELETE-URL:!=;%%%]
		{id:'x-del', 		field:'id', 			name:'#', 								sortable:false, 	width:50, 					formatter:displayDel},
		[%%%/IF:LIST-DELETE-URL%%%]
		{id:'x-ops', 		field:'id', 			name:'@', 								sortable:false, 	width:50, 					formatter:displayOps},
		{id:'special', 		field:'special',		name:'[###TXT-COL-SPECIAL|js###]', 		sortable:true, 		width:75, 					formatter:displaySpecial,editor:TextCellSelector, cssClass:'smartGrid_Important smartGrid_AlignRight'},
		{id:'ctrl', 		field:'ctrl', 			name:'[###TXT-COL-CTRL|js###]', 		sortable:true, 		width:diffColSize('ctrl'), 	formatter:displayCtrl, editor:TextCellSelector, cssClass:'smartGrid_Important'},
		{id:'id', 			field:'id', 			name:'[###TXT-COL-ID|js###]', 			sortable:true, 		width:diffColSize('id'), 	formatter:displayID, editor:TextCellSelector, cssClass:'smartGrid_Important'},
		{id:'mode', 		field:'mode', 			name:'[###TXT-COL-SYNTAX|js###]', 		sortable:true, 		width:75, 					formatter:displayCodeType, editor:TextCellSelector},
		{id:'name', 		field:'name', 			name:'[###TXT-COL-NAME|js###]', 		sortable:true, 		width:diffColSize('name'), 	formatter:displayName, editor:TextCellSelector, cssClass:'smartGrid_Important'},
		{id:'active', 		field:'active', 		name:'[###TXT-COL-ACTIVE|js###]', 		sortable:true, 		width:75, 					formatter:displayActive, editor:TextCellSelector},
		{id:'auth', 		field:'auth', 			name:'[###TXT-COL-AUTH|js###]', 		sortable:true, 		width:75, 					formatter:displayAuth, editor:TextCellSelector},
		{id:'translations', field:'translations', 	name:'[###TXT-COL-TRANSL|js###]', 		sortable:true, 		width:75, 					formatter:displayTransl, editor:TextCellSelector},
		{id:'counter', 		field:'counter', 		name:'[###TXT-COL-COUNTER|js###]', 		sortable:true, 		width:75, 					editor:TextCellSelector, cssClass:'smartGrid_AlignRight'}
	];

	// Grid Options
	var options = {
		enableAddRow: false,
		enableCellNavigation: true,
		enableColumnReorder: false,
		enableAsyncPostRender: true,
		forceFitColumns: false,
		asyncPostRenderDelay: 15,
		rowHeight: 27,
		editable: true,
		autoEdit: false,
	//	enableTextSelectionOnCells: false,
		asyncEditorLoading: false
	};

	// Grid sizing
	var winW = jQuery(window).width();
	var winH = jQuery(window).height();
	var diffW = 15;
	var diffH = 200;
	jQuery('#' + IdOfGrid).css({ 'width': parseInt(winW - diffW), 'height': parseInt(winH - diffH) });
	jQuery(window).resize(function() {
		winW = jQuery(window).width();
		winH = jQuery(window).height();
		jQuery('#' + IdOfGrid).css({ 'width': parseInt(winW - diffW), 'height': parseInt(winH - diffH) });
		TheGrid.grid.resizeCanvas();
		columns[2].width = diffColSize('id'); // id column
		columns[4].width = diffColSize('name'); // name column
		TheGrid.grid.autosizeColumns();
	});

	// Runtime
	TheGrid.initNavPager('PageBuilderNavPager', 3);
	TheGrid.initGrid(columns, options);
	TheGrid.grid.resizeCanvas();
	TheGrid.grid.autosizeColumns();
	TheGrid.loadGridData(0);

});
</script>
<!-- #END -->

# CHANGELOG / MIGRATION NOTES for Milestone Releases Only - SMART.FRAMEWORK #

February 07, 2019 :: Version 3.7.8 # rev.190207
	* changed the license to dual-licensing (see LICENSE)

January 03, 2019 :: Version 3.7.8
	* new feature: QUnit Test Module
	* new feature: Admins Auth Module with Simple or Multi-Account Authentication for admin.php area
	* removed some deprecated functions
	* moved lib MySQL / MariaDB from Smart.Framework.Modules to Smart.Framework
	* bug fixes and optimizations
	* fix compatibility with PHP 7.3 for all code
	* added SmartJS_DateUtils to lib/js/framework

October 10, 2018 :: Version 3.7.7
	* many optimizations for controllers, translators
	* some bug fixes
	* improved support for simplify settings for cookie domains to take easy in development
	* other code optimizations in many areas
	* improved debug and profiler to support better premature exits in controllers
	* includes a sample for advanced 404 customization
	* added lib mysqli to base from modules

March 09, 2018 :: Version 3.7.5
	* many optimizations for DB drivers
	* new feature: MongoDB library that works with PHP 5.6 / 7.0 / 7.1 / 7.2 and MongoDB servers 2.4 / 2.6 / 3.0 / 3.2 / 3.4 / 3.6
	* new feature: built-in DAV server (as module) that features: WebDAV / CalDAV / CardDAV
	* many fixes and improvements (libHTTPCli, libUtils, LibFileSys*, ...)

Sep 27, 2017 :: Version 3.5.7
	* middleware optimizations
	* feature: controller raw headers
	* many fixes in the Javascript code (ex: String() instead of .toString())
	* many fixes in the PHP code
	* rework and rename of some functions (see documentation)

May 12, 2017 :: Version 3.5.1
	* a complete new refactoring of UX Toolkit and some UI / JS Components
	* moved jQueryUI as separate module in Smart.Framework.modules
	* moved MediaGallery in Smart.Framework.modules -> smart-extra-libs

Apr, 11, 2017 :: Version 3.1.2
	* a bug fix release

Apr, 10, 2017 :: Version 3.1.1
	* Release / Stable
	* refactoring for SmartComponents
	* Marker Templating improvements

Aug, 12, 2016 :: Version 2.3.5
	* renamed SmartUnicode::utf8_fix_charset() to SmartUnicode::fix_charset()

Feb, 19, 2016 :: Version 2.3
	* Release / Stable (switch to SVN ; keep GIT just for public ...)

Feb, 05, 2016 :: Version 2.2
	* INFO: this is a bug-fix release for the version 2.1 branch, you are encouraged to use this version as soon as possbile
	* new features:
		* the core of the application rely now on more secure data filtering to safe strip all the lower (unsafe) characters from the input: GET / POST
		* 2 new functions added: SmartUnicode::utf8_to_iso() and SmartUnicode::utf8_fix_charset()
		* added a HTML Cleanup feature: (new SmartHtmlParser('<html>...your code goes here ...</html>'))->get_clean_html();
	* fixes:
		* it fixes a large number of REGEX incompatibilities from the past, while the regex expressions were using the \u (unicode) flag, it behave (strangely) different under several PHP versions but also varying by the version of the PCRE library that PHP was relying on
		* thus, all the REGEX expressions were reviewed / rewritten from the scratch to assure independent regex expression that does not depend on the \u flag
		* more, there were fixed several character set conversion issues ... (for working with other characters sets than UTF-8)
		* YAML library is now unicode independent and 17% faster parsing
		* Markdown library contain several fixes to improve the patter syntax in a more flexible way ...
	* security:
		* the PostgreSQL / SQLite database drivers are now using automate fix for UTF-8 charset using SmartUnicode::utf8_fix_charset() embedded in the Escaping functions to make it 100% safe ...
		* the Redis persistent cache is now using an automate fix for UTF-8 charset using SmartUnicode::utf8_fix_charset() embedded when saving a key value

Jan 19, 2016 :: Version 2.1
	* this version is backward incompatible as it had rewritten in many parts for optimizations .. gains 10% - 20% speedup in execution and requests/second !!!
	* some functions dissapeared (they were redundant), some classes were renamed, modules namespaces changed !
	* security has been completely rewritten into this new version to target new security standards *******
	* it is compatible with PHP 5.4.20+, PHP 5.5.15+, PHP 5.6.10+, PHP 7.0.1+
	* since PHP 5.4 (still supported but EOL) you should use this version just with projects that target PHP 5.5 / PHP 5.6 and PHP 7
	* see the documentation on how class changed since this version ... with a small effort you will be able to migrate your projects

#####

Dec 15, 2015 :: Version 1.5
	* backward incompatible changes:
		* in the PgSQL and SQLite drivers, the functions read_adata() and read_asdata() have been rotated each other,
			thus the new read_adata() since version 1.5 is now behaving like the old read_asdata() in versions prior to 1.5 ;
			and the new read_asdata() since version 1.5 is now behaving like the old read_adata() in versions prior to 1.5;
			- the new read_adata() since version 1.5: Read Associative Multiple Rows :: returns array(0 => array('column1', 'column2', ... 'column-n'), 1 => array('column1', 'column2', ... 'column-n'), ..., m => array('column1', 'column2', ... 'column-n'))
			- the new read_asdata() since version 1.5: Read Associative Single (one) Rows :: Throws Error if more records are returned by SQL :: returns a single row as array('column1', 'column2', ... 'column-n')
			(this come as a result from many users of these framework to make this function names more easy to remember)
			thus, this will remain finally as it is now since version 1.5
		* function Smart::log_error renamed as Smart::log_notice(), will just log a message as a notice (E_USER_NOTICE)
		* function Smart::warn_error() refactored as Smart::raise_error() (will log error messages as E_USER_ERROR and will raise a FATAL Error + HTTP 500 code)
	* new features:
		* added a new function Smart::log_warning() which will log messages as E_USER_WARNING
		* added detection for headers_sent() to avoid missbehave when PHP.ini output_buffering is zero !
	* optimizations:
		* more than 700 lines of code changed, to speed-up or optimize some areas
		* database drivers: PgSQL, SQLite and Redis are now re-using the connections for the same server:port@db#user
		* a more responsive and safe error log handler
		* review most of the error messages to split in 3 clear user land message log for: NOTICES / WARNINGS / (FATAL) ERRORS
		* Redis client class have an option to ignore connection errors.
			This is because in high-load environments / clustering) there are 1 / 100000 chances that one connection will fail.
			Thus in such conditions is better to ignore Redis and serve the content un-cached ... instead to serve a fatal error to visitore.

Nov 30, 2015 :: Version 1.3
	* backward incompatible changes:
		* renamed the class: SmartPgsqlObjDb to SmartPgsqlExtDb
	* new features:
		* added a new constant in etc/init.php to control if allow semantic URLs or not
		* added a new optional constant in etc/init.php to filter the GET/POST variables to UTF-8 :: define('SMART_FRAMEWORK_SECURITY_FILTER_INPUT', '/[^\\t\\r\\n[:print:]]/u');
		* added 2 new core functions: Smart::warn_error() that will raise the HTTP 500 code ; Smart::log_info() to offer a log just for info messages
	* optimizations:
		* code optimizations in many classes, execution time is better with ~10%
		* index / admin middlewares optimizations
		* improved error and exception handler (better catch of errors and exception messages)
	* security:
		* GET/POST improved input filters (default to UTF-8)
		* dissalow the Download Handler if not set an explicit method in a controller
	* documentation:
		* the documentation is available here: http://demo.unix-world.org/smart-framework.docs/

June 5, 2015 :: Version 1.2

March 07, 2015 :: Version 1.1

March 17, 2009 :: Version 0.1

# END #

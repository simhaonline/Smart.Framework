
# CHANGELOG / MIGRATION NOTES :: SMART.FRAMEWORK #
## This apply only for for Milestone Releases

August 19, 2020 :: Version 7.2.1 rev.20200819
	* Improve Extract Keywords Algorithm
	* Fix Cleanup Numbers in Keyword, Title and Description extraction algorithms
	* Smart Abstract Controller: new feature: PageViewGetVar()
	* SmartFramework Abstract Controller: new feature: PageViewGetErrorMessage
	* Fix Default Param for CookieSet in Controllers
	* PageBuilder: Implement RENDER @fields
	* PageBuilder Feature: allow to redefine Custom Render vars for Sub-Segments + create sub-render childs
	* PageBuilder new features: Clone Objects
	* PageBuilder media improvement: uploaded pictures can keep original name (optional)
	* PageBuilder plugin feature: can handle both - CallerData and Data
	* PageBuilder new feature: Marker Vars IF/ELSE
	* Add FileName to the SmartJS_BrowserUtils.VirtualImageUploadHandler
	* Markdown rendering: Add Parser TypeCast Prefix for Extra Attributes to make them functional in nested syntax
	* Fix Markdown Render Code CSS
	* CSS: Vertical TimeLine fixes

July 21, 2020 :: Version 7.2.1 rev.20200721
	* Core Router: Detect Tilda if Path Access is enabled
	* Smart: add Smart::str_replace_first() and Smart::str_replace_last() ; enable Strong Type Params for methods
	* Lib MongoDB: Count Fix with empty query + new features: UUID clustered if config shows a mongo cluster ; Update Replace record
	* MarkerTPL: fix some unattended regressions in syntax processing: IF / LOOP
	* PageBuilder: add WebDAV Files manager

July 17, 2020 :: Version 7.2.1 rev.20200717
	* MarkerTPL (PHP and Javascript): new escaping: |idtxt

July 15, 2020 :: Version 7.2.1 rev.20200715
	* Mime Decode Fixes (all non-explicit text/html parts which are not attachments fallback to text/plain mode)
	* Mime Decode Support for message/delivery-status

July 08, 2020 :: Version 7.2.1 rev.20200708
	* MailGet IMAP4 / POP3: new features: STARTTLS
	* MailGet POP3: new feature: CRAM-MD5
	* MailSend SMTP: new features: add support for CRAM-MD5 and XOAUTH2 authentication modes
	* MailUtils and Configs: allow selection of SMTP authentication mode

July 07, 2020 :: Version 7.2.1 rev.20200707
	* MailGet IMAP4: new features: CRAM-MD5 and XOAUTH2 authentication support
	* MailGet IMAP4 / POP3 fixes

June 30, 2020 :: Version 7.2.1 rev.20200630
	* PageBuilder: new feature: Tags

June 19, 2020 :: Version 7.2.1 rev.20200619
	* Implement New Feature for Controllers ; If Initialize() returns FALSE, this a mandatory error code is expected
	* Add Optional Absolute URL Prefixes in Captcha Form and ViewHelpers (HighlightJs, HtmlEditor, CodeEditor)
	* Fix: use absolute URL Prefixes in Debug Profiler templates

June 12, 2020 :: Version 7.2.1 rev.20200612
	* PageBuilder: new feature / frontend: Can Check if Page/Segment exists also by controller name

June 05, 2020 :: Version 7.2.1 rev.20200605
	* PHP 7.2+ Optimizations
	* Set MySQL Library to use utf8mb4 instead of utf8 by default on all connections

June 04, 2020 :: Version 5.7.2 rev.20200604
	* Fix Json Encode to use JSON_INVALID_UTF8_SUBSTITUTE flag
	* require PHP 7.2+

May 19, 2020 :: Version 5.7.2 rev.20200519
	* FS Get Storage / Search Files - improvements, scan also in linked dirs with cyclic infinite loop check
	* All SVGs fixed and validate against SVG 1.1 DTD

May 15, 2020 :: Version 5.7.2 rev.20200515
	* New Features for PageBuilder
	* New functionaluty to test if DEV or PROD environment
	* Several small fixes and optimizations
	* Update all documentation

May 13, 2020 :: Version 5.7.2 rev.20200513
	* New Features for PageBuilder
	* Bug Fixes for PageBuilder
	* Several fixes for LibYAML parser and composer

May 11, 2020 :: Version 5.7.2 rev.20200511
	* Fix bug in MongoDB PCache, if connection fails once will disable the PCache MongoDB as backend for the current session to avoid display website errors

May 05, 2020 :: Version 5.7.2 rev.20200507
	* Minor fix in DBA QUnit test
	* Upgrade jQuery to 3.5.1
	* Fix back upstream fix introduced in jQuery 3.5.0 as this will be back introduced in jQuery 4.0 and later (all scripts tested and stable) [ {} -> Object.create( null ) ]
	* AppCodePack - add support for multiple deployment URLs

May 05, 2020 :: Version 5.7.2 rev.20200505
	* Added Base62 Sequential UUIDs: Smart::uuid_13_seq() ; Smart::uuid_35_seq()
	* Added Base62 Sequential UUIDs for cluster: Smart::uuid_15_seq() ; Smart::uuid_37_seq()
	* Added Base36 Sequential UUID: Smart::uuid_32_seq()
	* Added Base36 Sequential UUIDs for cluster: Smart::uuid_12_seq() ; Smart::uuid_34_seq()

May 02, 2020 :: Version 5.7.2 rev.20200502
	* Upgrade jQuery to 3.5.0
	* Fix all broken javascripts that depend on jQuery and were affected by the major breaking changes in jQuery 3.5.0: xhtml tags converted to html tags ; object hasOwnProperty over {}

April 23, 2020 :: Version 5.7.2 rev.20200423
	* HTTP Client Class support chunked transfer for HTTP 1.1

April 15, 2020 :: Version 5.7.2 rev.20200415
	* Rework and fixes for Mail Send / Get / Decode

March 27, 2020 :: Version 5.7.2 rev.20200327
	* Add support to safe detect client IP address (allow set which trusted header to use for detect real IP) if running behind a proxy such as varnish or haproxy

February 17, 2020 :: Version 5.7.2 rev.20200217
	* Improve MongoDB update/upsert to support associative array to combine more operations

January 21, 2020 :: Version 5.7.2
	* optimizations (req. PHP 7.2 or later)

December 18, 2019 :: Version 5.2.7 rev.191218
	* SmartArchiverLZS (PHP) and SmartJS_Archiver_LZS (Js) moved to modules

December 17, 2019 :: Version 5.2.7 rev.191217
	* Barcodes moved to mod-barcodes
	* Captcha completely rewritten to support plugins (default uses SVG captcha) ; captcha image + fonts moved to mod-captcha
	* HTTP(s) Client support file uploads
	* Add support for AppcodePack to send package by upload to AppcodeUnpack

December 11, 2019 :: Version 5.2.7 rev.191211
	* Add MongoDB Custom Session Handler
	* Add MongoDB Custom Persistent Cache
	* Add new custom class to Toolkit CSS for buttons

December 05, 2019 :: Version 5.2.7 rev.191205
	* PHP 7.4 ready
	* removed deprecated SmartUtils::load_cached_file_content() ; use Persistent Cache instead
	* Add DBA Client
	* Add DBA Custom Session Handler
	* Add DBA Custom Persistent Cache
	* Add SQLite Custom Session Handler
	* Add SQLite Custom Persistent Cache
	* Redis: Change Object Constructor (order of parameters and all parameters are optional) to Simplify usage with default params from config
	* Error Handler: now uses a safe and absolute path to the tmp/log to be available also for handlers registered with register_shutdown_function() that can no more access relative bugs ; the PHP Bug #31570 (not fixed since a very long time)

November 26, 2019 :: Version 5.2.7 rev.191126
	* New documentation for PHP and Javascript
	* Renamed lib/js/framework/smart-framework.js to lib/js/framework/smart-framework.pak.js
	* Generated Js Package as lib/js/jscharts/charts.pak.js from lib/js/jscharts/src/*.js
	* Generated Js Packages as lib/js/jshighlight/syntax{%}.pak.js from lib/js/jshighlight/syntax/{%}
	* Change SmartComponents::get_filetype_highlightsyntax() to SmartViewHtmlHelpers::get_highlightsyntax_by_filetype()
	* Change SmartComponents::js_code_highlightsyntax() to SmartViewHtmlHelpers::html_jsload_highlightsyntax()

November 19, 2019 :: Version 5.2.7 rev.191119
	* DB Driver Fixes: Preserve NULL values on Read* for: SQlite3, MySQLi and PgSQL

November 16, 2019 :: Version 5.2.7 rev.191116
	* Security Fix: Safe Set CA File in several Client Libs
	* Markers-TPL: add support for escape or no syntax parsing of includded sub-templates
		# General Purposes
			- |syntax
		# HTML Context
			- |syntaxhtml
			- |html
		# JavaScript Context
			- |js
			- |js-tpl-encode
	* Js Refactoring:
		# SmartJS_BrowserUtils
			* SmartJS_BrowserUtils_* -> SmartJS_BrowserUtils.param_*
			* SmartJS_ModalBox_* -> SmartJS_ModalBox.param_*

November 09, 2019 :: Version 5.2.7
	* Migrate Markers-TPL from v3 to v5 (stable)
		# MarkersTemplating VARIABLES syntax breaking changes
			- [#### =>	[###
			- ####] =>	###]
		# MarkersTemplating SUB-TEMPLATE syntax breaking changes
			- [@@@@ =>	[@@@
			- @@@@] =>	@@@]
		# MarkersTemplating LOOP, COMMENTS, SPECIALS syntax breaking changes
			- [%%%% =>	[%%%
			- %%%%] =>	%%%]
		# MarkersTemplating IF syntax breaking changes
			- [%%%% =>	[%%%
			- %%%%] =>	%%%]
			- '~~'	=>	'&~'
			- '~*'	=>	'&*'
			- '@='	=>	'?'
			- '@!'	=>	'!?'
			- '@+'	=>	'@>'
			- '@-'	=>	'@<'
		# MarkersTemplating IF syntax new features (operators)
			- '@=='
			- '@!='
			- '@<='
			- '@>='
	* Refactoring: Smart::url_make_semantic() -> SmartUtils::create_semantic_url()
	* Speed Optimization for Smart::array_type_test()
	* Allow CamelCase URL Parameters
	* Add SafeHeader to check against \r\n in header() values :: security

October 22, 2019 :: Version 3.7.8 # rev.2019.10.22
	* fixes and optimizations
	* a bit of code refactoring
	* new classes in lib/core/plugins
	* compliant with PHP 5.6 / 7.0 / 7.1 / 7.2 / 7.3 / 7.4

February 07, 2019 :: Version 3.7.8 # rev.2019.02.07
	* changed the license to dual-licensing (see LICENSE)

January 03, 2019 :: Version 3.7.8
	* new feature: QUnit Test Module
	* new feature: Admins Auth Module with Simple or Multi-Account Authentication for admin.php area
	* removed some deprecated functions
	* moved lib MySQL / MariaDB from Smart.Framework.Modules to Smart.Framework
	* bug fixes and optimizations
	* fix compatibility with PHP 7.3 for all code
	* added SmartJS_DateUtils to lib/js/framework

October 10, 2018 :: Version 3.7.7
	* optimizations for controllers, translators
	* some bug fixes
	* improved support for simplify settings for cookie domains to take easy in development
	* other code optimizations in many areas
	* improved debug and profiler to support better premature exits in controllers
	* includes a sample for advanced 404 customization
	* added lib mysqli to base from modules

March 09, 2018 :: Version 3.7.5
	* optimizations for DB drivers
	* new feature: MongoDB library that works with PHP 5.6 / 7.0 / 7.1 / 7.2 and MongoDB servers 2.4 / 2.6 / 3.0 / 3.2 / 3.4 / 3.6
	* new feature: built-in DAV server (as module) that features: WebDAV / CalDAV / CardDAV
	* fixes and improvements (libHTTPCli, libUtils, LibFileSys*, ...)

Sep 27, 2017 :: Version 3.5.7
	* middleware optimizations
	* feature: controller raw headers
	* fixes in the Javascript code (ex: String() instead of .toString())
	* fixes in the PHP code
	* rework and rename of some functions (see documentation)

May 12, 2017 :: Version 3.5.1
	* a complete new refactoring of UX Toolkit and some UI / JS Components
	* moved jQueryUI as separate module in Smart.Framework.modules
	* moved MediaGallery in Smart.Framework.modules -> smart-extra-libs

Apr, 11, 2017 :: Version 3.1.2
	* a bug fix release

Apr, 10, 2017 :: Version 3.1.1
	* Release / Stable
	* refactoring for SmartComponents
	* Marker Templating improvements

Aug, 12, 2016 :: Version 2.3.5
	* renamed SmartUnicode::utf8_fix_charset() to SmartUnicode::fix_charset()

Feb, 19, 2016 :: Version 2.3
	* Release / Stable (switch to SVN ; keep GIT just for public ...)

Feb, 05, 2016 :: Version 2.2
	* INFO: this is a bug-fix release for the version 2.1 branch, you are encouraged to use this version as soon as possbile
	* new features:
		* the core of the application rely now on more secure data filtering to safe strip all the lower (unsafe) characters from the input: GET / POST
		* 2 new functions added: SmartUnicode::utf8_to_iso() and SmartUnicode::utf8_fix_charset()
		* added a HTML Cleanup feature: (new SmartHtmlParser('<html>...your code goes here ...</html>'))->get_clean_html();
	* fixes:
		* it fixes a large number of REGEX incompatibilities from the past, while the regex expressions were using the \u (unicode) flag, it behave (strangely) different under several PHP versions but also varying by the version of the PCRE library that PHP was relying on
		* thus, all the REGEX expressions were reviewed / rewritten from the scratch to assure independent regex expression that does not depend on the \u flag
		* more, there were fixed several character set conversion issues ... (for working with other characters sets than UTF-8)
		* YAML library is now unicode independent and 17% faster parsing
		* Markdown library contain several fixes to improve the patter syntax in a more flexible way ...
	* security:
		* the PostgreSQL / SQLite database drivers are now using automate fix for UTF-8 charset using SmartUnicode::utf8_fix_charset() embedded in the Escaping functions to make it 100% safe ...
		* the Redis persistent cache is now using an automate fix for UTF-8 charset using SmartUnicode::utf8_fix_charset() embedded when saving a key value

Jan 19, 2016 :: Version 2.1
	* this version is backward incompatible as it had rewritten in many parts for optimizations .. gains 10% - 20% speedup in execution and requests/second !!!
	* some functions dissapeared (they were redundant), some classes were renamed, modules namespaces changed !
	* security has been completely rewritten into this new version to target new security standards *******
	* it is compatible with PHP 5.4.20+, PHP 5.5.15+, PHP 5.6.10+, PHP 7.0.1+
	* since PHP 5.4 (still supported but EOL) you should use this version just with projects that target PHP 5.5 / PHP 5.6 and PHP 7
	* see the documentation on how class changed since this version ... with a small effort you will be able to migrate your projects

#####

Dec 15, 2015 :: Version 1.5
	* backward incompatible changes:
		* in the PgSQL and SQLite drivers, the functions read_adata() and read_asdata() have been rotated each other,
			thus the new read_adata() since version 1.5 is now behaving like the old read_asdata() in versions prior to 1.5 ;
			and the new read_asdata() since version 1.5 is now behaving like the old read_adata() in versions prior to 1.5;
			- the new read_adata() since version 1.5: Read Associative Multiple Rows :: returns array(0 => array('column1', 'column2', ... 'column-n'), 1 => array('column1', 'column2', ... 'column-n'), ..., m => array('column1', 'column2', ... 'column-n'))
			- the new read_asdata() since version 1.5: Read Associative Single (one) Rows :: Throws Error if more records are returned by SQL :: returns a single row as array('column1', 'column2', ... 'column-n')
			(this come as a result from many users of these framework to make this function names more easy to remember)
			thus, this will remain finally as it is now since version 1.5
		* function Smart::log_error renamed as Smart::log_notice(), will just log a message as a notice (E_USER_NOTICE)
		* function Smart::warn_error() refactored as Smart::raise_error() (will log error messages as E_USER_ERROR and will raise a FATAL Error + HTTP 500 code)
	* new features:
		* added a new function Smart::log_warning() which will log messages as E_USER_WARNING
		* added detection for headers_sent() to avoid missbehave when PHP.ini output_buffering is zero !
	* optimizations:
		* more than 700 lines of code changed, to speed-up or optimize some areas
		* database drivers: PgSQL, SQLite and Redis are now re-using the connections for the same server:port@db#user
		* a more responsive and safe error log handler
		* review most of the error messages to split in 3 clear user land message log for: NOTICES / WARNINGS / (FATAL) ERRORS
		* Redis client class have an option to ignore connection errors.
			This is because in high-load environments / clustering) there are 1 / 100000 chances that one connection will fail.
			Thus in such conditions is better to ignore Redis and serve the content un-cached ... instead to serve a fatal error to visitore.

Nov 30, 2015 :: Version 1.3
	* backward incompatible changes:
		* renamed the class: SmartPgsqlObjDb to SmartPgsqlExtDb
	* new features:
		* added a new constant in etc/init.php to control if allow semantic URLs or not
		* added a new optional constant in etc/init.php to filter the GET/POST variables to UTF-8 :: define('SMART_FRAMEWORK_SECURITY_FILTER_INPUT', '/[^\\t\\r\\n[:print:]]/u');
		* added 2 new core functions: Smart::warn_error() that will raise the HTTP 500 code ; Smart::log_info() to offer a log just for info messages
	* optimizations:
		* code optimizations in many classes, execution time is better with ~10%
		* index / admin middlewares optimizations
		* improved error and exception handler (better catch of errors and exception messages)
	* security:
		* GET/POST improved input filters (default to UTF-8)
		* dissalow the Download Handler if not set an explicit method in a controller
	* documentation:
		* the documentation is available here: http://demo.unix-world.org/smart-framework.docs/

June 5, 2015 :: Version 1.2

March 07, 2015 :: Version 1.1

March 17, 2009 :: Version 0.1

# END #


// # JS Package: syntax-web.pak.js :: #START# :: @ generated from lib/js/jshighlight/syntax/web/*.js
// Included Files: web/*.js #

// ### DO NOT EDIT THIS FILE AS IT WILL BE OVERWRITTEN EACH TIME THE INCLUDED SCRIPTS WILL CHANGE !!! ###

// === web/css.js

/*
Language: CSS
Category: common, css
*/

// syntax/web/css.js
// HighlightJs: v.9.13.1

hljs.registerLanguage('css',
function(hljs) {
	var IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';
	var RULE = {
		begin: /[A-Z\_\.\-]+\s*:/, returnBegin: true, end: ';', endsWithParent: true,
		contains: [
			{
				className: 'attribute',
				begin: /\S/, end: ':', excludeEnd: true,
				starts: {
					endsWithParent: true, excludeEnd: true,
					contains: [
						{
							begin: /[\w-]+\(/, returnBegin: true,
							contains: [
								{
									className: 'built_in',
									begin: /[\w-]+/
								},
								{
									begin: /\(/, end: /\)/,
									contains: [
										hljs.APOS_STRING_MODE,
										hljs.QUOTE_STRING_MODE
									]
								}
							]
						},
						hljs.CSS_NUMBER_MODE,
						hljs.QUOTE_STRING_MODE,
						hljs.APOS_STRING_MODE,
						hljs.C_BLOCK_COMMENT_MODE,
						{
							className: 'number', begin: '#[0-9A-Fa-f]+'
						},
						{
							className: 'meta', begin: '!important'
						}
					]
				}
			}
		]
	};

	return {
		case_insensitive: true,
		illegal: /[=\/|'\$]/,
		contains: [
			hljs.C_BLOCK_COMMENT_MODE,
			{
				className: 'selector-id', begin: /#[A-Za-z0-9_-]+/
			},
			{
				className: 'selector-class', begin: /\.[A-Za-z0-9_-]+/
			},
			{
				className: 'selector-attr',
				begin: /\[/, end: /\]/,
				illegal: '$'
			},
			{
				className: 'selector-pseudo',
				begin: /:(:)?[a-zA-Z0-9\_\-\+\(\)"'.]+/
			},
			{
				begin: '@(font-face|page)',
				lexemes: '[a-z-]+',
				keywords: 'font-face page'
			},
			{
				begin: '@', end: '[{;]', // at_rule eating first "{" is a good thing
																 // because it doesnâ€™t let it to be parsed as
																 // a rule set but instead drops parser into
																 // the default mode which is how it should be.
				illegal: /:/, // break on Less variables @var: ...
				contains: [
					{
						className: 'keyword',
						begin: /\w+/
					},
					{
						begin: /\s/, endsWithParent: true, excludeEnd: true,
						relevance: 0,
						contains: [
							hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE,
							hljs.CSS_NUMBER_MODE
						]
					}
				]
			},
			{
				className: 'selector-tag', begin: IDENT_RE,
				relevance: 0
			},
			{
				begin: '{', end: '}',
				illegal: /\S/,
				contains: [
					hljs.C_BLOCK_COMMENT_MODE,
					RULE,
				]
			}
		]
	};
}
);

// #END

// === web/diff.js

/*
Language: Diff
Description: Unified and context diff
Author: Vasily Polovnyov <vast@whiteants.net>
Category: common
*/

// syntax/web/diff.js
// HighlightJs: v.9.13.1

hljs.registerLanguage('diff',
function(hljs) {
	return {
		aliases: ['patch'],
		contains: [
			{
				className: 'meta',
				relevance: 10,
				variants: [
					{begin: /^@@ +\-\d+,\d+ +\+\d+,\d+ +@@$/},
					{begin: /^\*\*\* +\d+,\d+ +\*\*\*\*$/},
					{begin: /^\-\-\- +\d+,\d+ +\-\-\-\-$/}
				]
			},
			{
				className: 'comment',
				variants: [
					{begin: /Index: /, end: /$/},
					{begin: /={3,}/, end: /$/},
					{begin: /^\-{3}/, end: /$/},
					{begin: /^\*{3} /, end: /$/},
					{begin: /^\+{3}/, end: /$/},
					{begin: /\*{5}/, end: /\*{5}$/}
				]
			},
			{
				className: 'addition',
				begin: '^\\+', end: '$'
			},
			{
				className: 'deletion',
				begin: '^\\-', end: '$'
			},
			{
				className: 'addition',
				begin: '^\\!', end: '$'
			}
		]
	};
}
);

// #END

// === web/ini.js

/*
Language: Ini, TOML
Contributors: Guillaume Gomez <guillaume1.gomez@gmail.com>
Category: common, config
*/

// syntax/web/ini.js
// HighlightJs: v.9.13.1

hljs.registerLanguage('ini',
function(hljs) {
	var STRING = {
		className: "string",
		contains: [hljs.BACKSLASH_ESCAPE],
		variants: [
			{
				begin: "'''", end: "'''",
				relevance: 10
			}, {
				begin: '"""', end: '"""',
				relevance: 10
			}, {
				begin: '"', end: '"'
			}, {
				begin: "'", end: "'"
			}
		]
	};
	return {
		aliases: ['toml'],
		case_insensitive: true,
		illegal: /\S/,
		contains: [
			hljs.COMMENT(';', '$'),
			hljs.HASH_COMMENT_MODE,
			{
				className: 'section',
				begin: /^\s*\[+/, end: /\]+/
			},
			{
				begin: /^[a-z0-9\[\]_-]+\s*=\s*/, end: '$',
				returnBegin: true,
				contains: [
					{
						className: 'attr',
						begin: /[a-z0-9\[\]_-]+/
					},
					{
						begin: /=/, endsWithParent: true,
						relevance: 0,
						contains: [
							{
								className: 'literal',
								begin: /\bon|off|true|false|yes|no\b/
							},
							{
								className: 'variable',
								variants: [
									{begin: /\$[\w\d"][\w\d_]*/},
									{begin: /\$\{(.*?)}/}
								]
							},
							STRING,
							{
								className: 'number',
								begin: /([\+\-]+)?[\d]+_[\d_]+/
							},
							hljs.NUMBER_MODE
						]
					}
				]
			}
		]
	};
}
);

// #END

// === web/javascript.js

/*
Language: JavaScript
Category: common, scripting
*/

// syntax/web/javascript.js
// HighlightJs: v.9.13.1

hljs.registerLanguage('javascript',
function(hljs) {
	var IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';
	var KEYWORDS = {
		keyword:
			'in of if for while finally var new function do return void else break catch ' +
			'instanceof with throw case default try this switch continue typeof delete ' +
			'let yield const export super debugger as async await static ' +
			// ECMAScript 6 modules import
			'import from as'
		,
		literal:
			'true false null undefined NaN Infinity',
		built_in:
			'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' +
			'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' +
			'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' +
			'TypeError URIError Number Math Date String RegExp Array Float32Array ' +
			'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' +
			'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' +
			'module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect ' +
			'Promise'
	};
	var EXPRESSIONS;
	var NUMBER = {
		className: 'number',
		variants: [
			{ begin: '\\b(0[bB][01]+)' },
			{ begin: '\\b(0[oO][0-7]+)' },
			{ begin: hljs.C_NUMBER_RE }
		],
		relevance: 0
	};
	var SUBST = {
		className: 'subst',
		begin: '\\$\\{', end: '\\}',
		keywords: KEYWORDS,
		contains: []  // defined later
	};
	var TEMPLATE_STRING = {
		className: 'string',
		begin: '`', end: '`',
		contains: [
			hljs.BACKSLASH_ESCAPE,
			SUBST
		]
	};
	SUBST.contains = [
		hljs.APOS_STRING_MODE,
		hljs.QUOTE_STRING_MODE,
		TEMPLATE_STRING,
		NUMBER,
		hljs.REGEXP_MODE
	]
	var PARAMS_CONTAINS = SUBST.contains.concat([
		hljs.C_BLOCK_COMMENT_MODE,
		hljs.C_LINE_COMMENT_MODE
	]);

	return {
		aliases: ['js', 'jsx'],
		keywords: KEYWORDS,
		contains: [
			{
				className: 'meta',
				relevance: 10,
				begin: /^\s*['"]use (strict|asm)['"]/
			},
			{
				className: 'meta',
				begin: /^#!/, end: /$/
			},
			hljs.APOS_STRING_MODE,
			hljs.QUOTE_STRING_MODE,
			TEMPLATE_STRING,
			hljs.C_LINE_COMMENT_MODE,
			hljs.C_BLOCK_COMMENT_MODE,
			NUMBER,
			{ // object attr container
				begin: /[{,]\s*/, relevance: 0,
				contains: [
					{
						begin: IDENT_RE + '\\s*:', returnBegin: true,
						relevance: 0,
						contains: [{className: 'attr', begin: IDENT_RE, relevance: 0}]
					}
				]
			},
			{ // "value" container
				begin: '(' + hljs.RE_STARTERS_RE + '|\\b(case|return|throw)\\b)\\s*',
				keywords: 'return throw case',
				contains: [
					hljs.C_LINE_COMMENT_MODE,
					hljs.C_BLOCK_COMMENT_MODE,
					hljs.REGEXP_MODE,
					{
						className: 'function',
						begin: '(\\(.*?\\)|' + IDENT_RE + ')\\s*=>', returnBegin: true,
						end: '\\s*=>',
						contains: [
							{
								className: 'params',
								variants: [
									{
										begin: IDENT_RE
									},
									{
										begin: /\(\s*\)/,
									},
									{
										begin: /\(/, end: /\)/,
										excludeBegin: true, excludeEnd: true,
										keywords: KEYWORDS,
										contains: PARAMS_CONTAINS
									}
								]
							}
						]
					},
					{ // E4X / JSX
						begin: /</, end: /(\/\w+|\w+\/)>/,
						subLanguage: 'xml',
						contains: [
							{begin: /<\w+\s*\/>/, skip: true},
							{
								begin: /<\w+/, end: /(\/\w+|\w+\/)>/, skip: true,
								contains: [
									{begin: /<\w+\s*\/>/, skip: true},
									'self'
								]
							}
						]
					}
				],
				relevance: 0
			},
			{
				className: 'function',
				beginKeywords: 'function', end: /\{/, excludeEnd: true,
				contains: [
					hljs.inherit(hljs.TITLE_MODE, {begin: IDENT_RE}),
					{
						className: 'params',
						begin: /\(/, end: /\)/,
						excludeBegin: true,
						excludeEnd: true,
						contains: PARAMS_CONTAINS
					}
				],
				illegal: /\[|%/
			},
			{
				begin: /\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`
			},
			hljs.METHOD_GUARD,
			{ // ES6 class
				className: 'class',
				beginKeywords: 'class', end: /[{;=]/, excludeEnd: true,
				illegal: /[:"\[\]]/,
				contains: [
					{beginKeywords: 'extends'},
					hljs.UNDERSCORE_TITLE_MODE
				]
			},
			{
				beginKeywords: 'constructor', end: /\{/, excludeEnd: true
			}
		],
		illegal: /#(?!!)/
	};
}
);

// #END

// === web/json.js

/*
Language: JSON
Author: Ivan Sagalaev <maniac@softwaremaniacs.org>
Category: common, protocols
*/

// syntax/web/json.js
// HighlightJs: v.9.13.1

hljs.registerLanguage('json',
function(hljs) {
	var LITERALS = {literal: 'true false null'};
	var TYPES = [
		hljs.QUOTE_STRING_MODE,
		hljs.C_NUMBER_MODE
	];
	var VALUE_CONTAINER = {
		end: ',', endsWithParent: true, excludeEnd: true,
		contains: TYPES,
		keywords: LITERALS
	};
	var OBJECT = {
		begin: '{', end: '}',
		contains: [
			{
				className: 'attr',
				begin: /"/, end: /"/,
				contains: [hljs.BACKSLASH_ESCAPE],
				illegal: '\\n',
			},
			hljs.inherit(VALUE_CONTAINER, {begin: /:/})
		],
		illegal: '\\S'
	};
	var ARRAY = {
		begin: '\\[', end: '\\]',
		contains: [hljs.inherit(VALUE_CONTAINER)], // inherit is a workaround for a bug that makes shared modes with endsWithParent compile only the ending of one of the parents
		illegal: '\\S'
	};
	TYPES.splice(TYPES.length, 0, OBJECT, ARRAY);
	return {
		contains: TYPES,
		keywords: LITERALS,
		illegal: '\\S'
	};
}
);

// #END

// === web/less.js

/*
Language: Less
Author:   Max Mikhailov <seven.phases.max@gmail.com>
Category: css
*/

// syntax/web/less.js
// HighlightJs: v.9.13.1

hljs.registerLanguage('less',
function(hljs) {
	var IDENT_RE        = '[\\w-]+'; // yes, Less identifiers may begin with a digit
	var INTERP_IDENT_RE = '(' + IDENT_RE + '|@{' + IDENT_RE + '})';

	/* Generic Modes */

	var RULES = [], VALUE = []; // forward def. for recursive modes

	var STRING_MODE = function(c) { return {
		// Less strings are not multiline (also include '~' for more consistent coloring of "escaped" strings)
		className: 'string', begin: '~?' + c + '.*?' + c
	};};

	var IDENT_MODE = function(name, begin, relevance) { return {
		className: name, begin: begin, relevance: relevance
	};};

	var PARENS_MODE = {
		// used only to properly balance nested parens inside mixin call, def. arg list
		begin: '\\(', end: '\\)', contains: VALUE, relevance: 0
	};

	// generic Less highlighter (used almost everywhere except selectors):
	VALUE.push(
		hljs.C_LINE_COMMENT_MODE,
		hljs.C_BLOCK_COMMENT_MODE,
		STRING_MODE("'"),
		STRING_MODE('"'),
		hljs.CSS_NUMBER_MODE, // fixme: it does not include dot for numbers like .5em :(
		{
			begin: '(url|data-uri)\\(',
			starts: {className: 'string', end: '[\\)\\n]', excludeEnd: true}
		},
		IDENT_MODE('number', '#[0-9A-Fa-f]+\\b'),
		PARENS_MODE,
		IDENT_MODE('variable', '@@?' + IDENT_RE, 10),
		IDENT_MODE('variable', '@{'  + IDENT_RE + '}'),
		IDENT_MODE('built_in', '~?`[^`]*?`'), // inline javascript (or whatever host language) *multiline* string
		{ // @media features (itâ€™s here to not duplicate things in AT_RULE_MODE with extra PARENS_MODE overriding):
			className: 'attribute', begin: IDENT_RE + '\\s*:', end: ':', returnBegin: true, excludeEnd: true
		},
		{
			className: 'meta',
			begin: '!important'
		}
	);

	var VALUE_WITH_RULESETS = VALUE.concat({
		begin: '{', end: '}', contains: RULES
	});

	var MIXIN_GUARD_MODE = {
		beginKeywords: 'when', endsWithParent: true,
		contains: [{beginKeywords: 'and not'}].concat(VALUE) // using this form to override VALUEâ€™s 'function' match
	};

	/* Rule-Level Modes */

	var RULE_MODE = {
		begin: INTERP_IDENT_RE + '\\s*:', returnBegin: true, end: '[;}]',
		relevance: 0,
		contains: [
			{
				className: 'attribute',
				begin: INTERP_IDENT_RE, end: ':', excludeEnd: true,
				starts: {
					endsWithParent: true, illegal: '[<=$]',
					relevance: 0,
					contains: VALUE
				}
			}
		]
	};

	var AT_RULE_MODE = {
		className: 'keyword',
		begin: '@(import|media|charset|font-face|(-[a-z]+-)?keyframes|supports|document|namespace|page|viewport|host)\\b',
		starts: {end: '[;{}]', returnEnd: true, contains: VALUE, relevance: 0}
	};

	// variable definitions and calls
	var VAR_RULE_MODE = {
		className: 'variable',
		variants: [
			// using more strict pattern for higher relevance to increase chances of Less detection.
			// this is *the only* Less specific statement used in most of the sources, so...
			// (weâ€™ll still often loose to the css-parser unless there's '//' comment,
			// simply because 1 variable just can't beat 99 properties :)
			{begin: '@' + IDENT_RE + '\\s*:', relevance: 15},
			{begin: '@' + IDENT_RE}
		],
		starts: {end: '[;}]', returnEnd: true, contains: VALUE_WITH_RULESETS}
	};

	var SELECTOR_MODE = {
		// first parse unambiguous selectors (i.e. those not starting with tag)
		// then fall into the scary lookahead-discriminator variant.
		// this mode also handles mixin definitions and calls
		variants: [{
			begin: '[\\.#:&\\[>]', end: '[;{}]'  // mixin calls end with ';'
			}, {
			begin: INTERP_IDENT_RE, end: '{'
		}],
		returnBegin: true,
		returnEnd:   true,
		illegal: '[<=\'$"]',
		relevance: 0,
		contains: [
			hljs.C_LINE_COMMENT_MODE,
			hljs.C_BLOCK_COMMENT_MODE,
			MIXIN_GUARD_MODE,
			IDENT_MODE('keyword',  'all\\b'),
			IDENT_MODE('variable', '@{'  + IDENT_RE + '}'),     // otherwise itâ€™s identified as tag
			IDENT_MODE('selector-tag',  INTERP_IDENT_RE + '%?', 0), // '%' for more consistent coloring of @keyframes "tags"
			IDENT_MODE('selector-id', '#' + INTERP_IDENT_RE),
			IDENT_MODE('selector-class', '\\.' + INTERP_IDENT_RE, 0),
			IDENT_MODE('selector-tag',  '&', 0),
			{className: 'selector-attr', begin: '\\[', end: '\\]'},
			{className: 'selector-pseudo', begin: /:(:)?[a-zA-Z0-9\_\-\+\(\)"'.]+/},
			{begin: '\\(', end: '\\)', contains: VALUE_WITH_RULESETS}, // argument list of parametric mixins
			{begin: '!important'} // eat !important after mixin call or it will be colored as tag
		]
	};

	RULES.push(
		hljs.C_LINE_COMMENT_MODE,
		hljs.C_BLOCK_COMMENT_MODE,
		AT_RULE_MODE,
		VAR_RULE_MODE,
		RULE_MODE,
		SELECTOR_MODE
	);

	return {
		case_insensitive: true,
		illegal: '[=>\'/<($"]',
		contains: RULES
	};
}
);

// #END

// === web/markdown.js

/*
Language: Markdown
Requires: xml.js
Author: John Crepezzi <john.crepezzi@gmail.com>
Website: http://seejohncode.com/
Category: common, markup
*/

// syntax/web/markdown.js
// HighlightJs: v.9.13.1

hljs.registerLanguage('markdown',
function(hljs) {
	return {
		aliases: ['md', 'mkdown', 'mkd'],
		contains: [
			// highlight headers
			{
				className: 'section',
				variants: [
					{ begin: '^#{1,6}', end: '$' },
					{ begin: '^.+?\\n[=-]{2,}$' }
				]
			},
			// inline html
			{
				begin: '<', end: '>',
				subLanguage: 'xml',
				relevance: 0
			},
			// lists (indicators only)
			{
				className: 'bullet',
				begin: '^([*+-]|(\\d+\\.))\\s+'
			},
			// strong segments
			{
				className: 'strong',
				begin: '[*_]{2}.+?[*_]{2}'
			},
			// emphasis segments
			{
				className: 'emphasis',
				variants: [
					{ begin: '\\*.+?\\*' },
					{ begin: '_.+?_'
					, relevance: 0
					}
				]
			},
			// blockquotes
			{
				className: 'quote',
				begin: '^>\\s+', end: '$'
			},
			// code snippets
			{
				className: 'code',
				variants: [
					{
						begin: '^```\w*\s*$', end: '^```\s*$'
					},
					{
						begin: '`.+?`'
					},
					{
						begin: '^( {4}|\t)', end: '$',
						relevance: 0
					}
				]
			},
			// horizontal rules
			{
				begin: '^[-\\*]{3,}', end: '$'
			},
			// using links - title and link
			{
				begin: '\\[.+?\\][\\(\\[].*?[\\)\\]]',
				returnBegin: true,
				contains: [
					{
						className: 'string',
						begin: '\\[', end: '\\]',
						excludeBegin: true,
						returnEnd: true,
						relevance: 0
					},
					{
						className: 'link',
						begin: '\\]\\(', end: '\\)',
						excludeBegin: true, excludeEnd: true
					},
					{
						className: 'symbol',
						begin: '\\]\\[', end: '\\]',
						excludeBegin: true, excludeEnd: true
					}
				],
				relevance: 10
			},
			{
				begin: /^\[[^\n]+\]:/,
				returnBegin: true,
				contains: [
					{
						className: 'symbol',
						begin: /\[/, end: /\]/,
						excludeBegin: true, excludeEnd: true
					},
					{
						className: 'link',
						begin: /:\s*/, end: /$/,
						excludeBegin: true
					}
				]
			}
		]
	};
}
);

// #END

// === web/pgsql.js

/*
Language: PostgreSQL SQL dialect and PL/pgSQL
Author: Egor Rogov (e.rogov@postgrespro.ru)
Description:
		This language incorporates both PostgreSQL SQL dialect and PL/pgSQL language.
		It is based on PostgreSQL version 11. Some notes:
		- Text in double-dollar-strings is _always_ interpreted as some programming code. Text
			in ordinary quotes is _never_ interpreted that way and highlighted just as a string.
		- There are quite a bit "special cases". That's because many keywords are not strictly
			they are keywords in some contexts and ordinary identifiers in others. Only some
			of such cases are handled; you still can get some of your identifiers highlighted
			wrong way.
		- Function names deliberately are not highlighted. There is no way to tell function
			call from other constructs, hence we can't highlight _all_ function names. And
			some names highlighted while others not looks ugly.
### modified by unixman: contains some fixes
*/

// syntax/web/pgsql.js
// HighlightJs: v.9.13.1

hljs.registerLanguage('pgsql',
function(hljs) {
	var COMMENT_MODE = hljs.COMMENT('--', '$');
	var UNQUOTED_IDENT = '[a-zA-Z_][a-zA-Z_0-9$]*';
	var DOLLAR_STRING = '\\$([a-zA-Z_]?|[a-zA-Z_][a-zA-Z_0-9]*)\\$';
	var LABEL = '<<\\s*' + UNQUOTED_IDENT + '\\s*>>';

	var SQL_KW =
		// https://www.postgresql.org/docs/11/static/sql-keywords-appendix.html
		// https://www.postgresql.org/docs/11/static/sql-commands.html
		// SQL commands (starting words)
		'ABORT ALTER ANALYZE BEGIN CALL CHECKPOINT|10 CLOSE CLUSTER COMMENT COMMIT COPY CREATE DEALLOCATE DECLARE ' +
		'DELETE DISCARD DO DROP END EXECUTE EXPLAIN FETCH GRANT IMPORT INSERT LISTEN LOAD LOCK MOVE NOTIFY ' +
		'PREPARE REASSIGN|10 REFRESH REINDEX RELEASE RESET REVOKE ROLLBACK SAVEPOINT SECURITY SELECT SET SHOW ' +
		'START TRUNCATE UNLISTEN|10 UPDATE VACUUM|10 VALUES ' +
		// SQL commands (others)
		'AGGREGATE COLLATION CONVERSION|10 DATABASE DEFAULT PRIVILEGES DOMAIN TRIGGER EXTENSION FOREIGN ' +
		'WRAPPER|10 TABLE FUNCTION GROUP LANGUAGE LARGE OBJECT MATERIALIZED VIEW OPERATOR CLASS ' +
		'FAMILY POLICY PUBLICATION|10 ROLE RULE SCHEMA SEQUENCE SERVER STATISTICS SUBSCRIPTION SYSTEM ' +
		'TABLESPACE CONFIGURATION DICTIONARY PARSER TEMPLATE TYPE USER MAPPING PREPARED ACCESS ' +
		'METHOD CAST AS TRANSFORM TRANSACTION OWNED TO INTO SESSION AUTHORIZATION ' +
		'INDEX PROCEDURE ASSERTION ' +
		// additional reserved key words
		'ALL ANALYSE AND ANY ARRAY ASC ASYMMETRIC|10 BOTH CASE CHECK ' +
		'COLLATE COLUMN CONCURRENTLY|10 CONSTRAINT CROSS ' +
		'DEFERRABLE RANGE ' +
		'DESC DISTINCT ELSE EXCEPT FOR FREEZE|10 FROM FULL HAVING ' +
		'ILIKE IN INITIALLY INNER INTERSECT IS ISNULL JOIN LATERAL LEADING LIKE LIMIT ' +
		'NATURAL NOT NOTNULL NULL OFFSET ON ONLY OR ORDER OUTER OVERLAPS PLACING PRIMARY ' +
		'REFERENCES RETURNING SIMILAR SOME SYMMETRIC TABLESAMPLE THEN ' +
		'TRAILING UNION UNIQUE USING VARIADIC|10 VERBOSE WHEN WHERE WINDOW WITH ' +
		// some of non-reserved (which are used in clauses or as PL/pgSQL keyword)
		'BY RETURNS INOUT OUT SETOF|10 IF STRICT CURRENT CONTINUE OWNER LOCATION OVER PARTITION WITHIN ' +
		'BETWEEN ESCAPE EXTERNAL INVOKER DEFINER WORK RENAME VERSION CONNECTION CONNECT ' +
		'TABLES TEMP TEMPORARY FUNCTIONS SEQUENCES TYPES SCHEMAS OPTION CASCADE RESTRICT ADD ADMIN ' +
		'EXISTS VALID VALIDATE ENABLE DISABLE REPLICA|10 ALWAYS PASSING COLUMNS PATH ' +
		'REF VALUE OVERRIDING IMMUTABLE STABLE VOLATILE BEFORE AFTER EACH ROW PROCEDURAL ' +
		'ROUTINE NO HANDLER VALIDATOR OPTIONS STORAGE OIDS|10 WITHOUT INHERIT DEPENDS CALLED ' +
		'INPUT LEAKPROOF|10 COST ROWS NOWAIT SEARCH UNTIL ENCRYPTED|10 PASSWORD CONFLICT|10 ' +
		'INSTEAD INHERITS CHARACTERISTICS WRITE CURSOR ALSO STATEMENT SHARE EXCLUSIVE INLINE ' +
		'ISOLATION REPEATABLE READ COMMITTED SERIALIZABLE UNCOMMITTED LOCAL GLOBAL SQL PROCEDURES ' +
		'RECURSIVE SNAPSHOT ROLLUP CUBE TRUSTED|10 INCLUDE FOLLOWING PRECEDING UNBOUNDED RANGE GROUPS ' +
		'UNENCRYPTED|10 SYSID FORMAT DELIMITER HEADER QUOTE ENCODING FILTER OFF ' +
		// some parameters of VACUUM/ANALYZE/EXPLAIN
		'FORCE_QUOTE FORCE_NOT_NULL FORCE_NULL COSTS BUFFERS TIMING SUMMARY DISABLE_PAGE_SKIPPING ' +
		//
		'RESTART CYCLE GENERATED IDENTITY DEFERRED IMMEDIATE LEVEL LOGGED UNLOGGED ' +
		'OF NOTHING NONE EXCLUDE ATTRIBUTE ' +
		// from GRANT (not keywords actually)
		'USAGE ROUTINES ' +
		// actually literals, but look better this way (due to IS TRUE, IS FALSE, ISNULL etc)
		'TRUE FALSE NAN INFINITY ';

	var ROLE_ATTRS = // only those not in keywrods already
		'SUPERUSER NOSUPERUSER CREATEDB NOCREATEDB CREATEROLE NOCREATEROLE INHERIT NOINHERIT ' +
		'LOGIN NOLOGIN REPLICATION NOREPLICATION BYPASSRLS NOBYPASSRLS ';

	var PLPGSQL_KW =
		'ALIAS BEGIN CONSTANT DECLARE END EXCEPTION RETURN PERFORM|10 RAISE GET DIAGNOSTICS ' +
		'STACKED|10 FOREACH LOOP ELSIF EXIT WHILE REVERSE SLICE DEBUG LOG INFO NOTICE WARNING ASSERT ' +
		'OPEN ';

	var TYPES =
		// https://www.postgresql.org/docs/11/static/datatype.html
		'BIGINT INT8 BIGSERIAL SERIAL8 BIT VARYING VARBIT BOOLEAN BOOL BOX BYTEA CHARACTER CHAR VARCHAR ' +
		'CIDR CIRCLE DATE DOUBLE PRECISION FLOAT8 FLOAT INET INTEGER INT INT4 INTERVAL JSON JSONB LINE LSEG|10 ' +
		'MACADDR MACADDR8 MONEY NUMERIC DEC DECIMAL PATH POINT POLYGON REAL FLOAT4 SMALLINT INT2 ' +
		'SMALLSERIAL|10 SERIAL2|10 SERIAL|10 SERIAL4|10 TEXT TIME ZONE TIMETZ|10 TIMESTAMP TIMESTAMPTZ|10 TSQUERY|10 TSVECTOR|10 ' +
		'TXID_SNAPSHOT|10 UUID XML NATIONAL NCHAR ' +
		'INT4RANGE|10 INT8RANGE|10 NUMRANGE|10 TSRANGE|10 TSTZRANGE|10 DATERANGE|10 ' +
		// fix by unixman
		'PLPGSQL ' +
		// pseudotypes
		'ANYELEMENT ANYARRAY ANYNONARRAY ANYENUM ANYRANGE CSTRING INTERNAL ' +
		'RECORD PG_DDL_COMMAND VOID UNKNOWN OPAQUE REFCURSOR ' +
		// spec. type
		'NAME ' +
		// OID-types
		'OID REGPROC|10 REGPROCEDURE|10 REGOPER|10 REGOPERATOR|10 REGCLASS|10 REGTYPE|10 REGROLE|10 ' +
		'REGNAMESPACE|10 REGCONFIG|10 REGDICTIONARY|10 ';// +
		// some types from standard extensions
		'HSTORE|10 LO LTREE|10 ';

	var TYPES_RE =
		TYPES.trim()
				 .split(' ')
				 .map( function(val) { return val.split('|')[0]; } )
				 .join('|');

	var SQL_BI =
		'CURRENT_TIME CURRENT_TIMESTAMP CURRENT_USER CURRENT_CATALOG|10 CURRENT_DATE LOCALTIME LOCALTIMESTAMP ' +
		'CURRENT_ROLE|10 CURRENT_SCHEMA|10 SESSION_USER PUBLIC ';

	var PLPGSQL_BI =
		'FOUND NEW OLD TG_NAME|10 TG_WHEN|10 TG_LEVEL|10 TG_OP|10 TG_RELID|10 TG_RELNAME|10 ' +
		'TG_TABLE_NAME|10 TG_TABLE_SCHEMA|10 TG_NARGS|10 TG_ARGV|10 TG_EVENT|10 TG_TAG|10 ' +
		// get diagnostics
		'ROW_COUNT RESULT_OID|10 PG_CONTEXT|10 RETURNED_SQLSTATE COLUMN_NAME CONSTRAINT_NAME ' +
		'PG_DATATYPE_NAME|10 MESSAGE_TEXT TABLE_NAME SCHEMA_NAME PG_EXCEPTION_DETAIL|10 ' +
		'PG_EXCEPTION_HINT|10 PG_EXCEPTION_CONTEXT|10 ';

	var PLPGSQL_EXCEPTIONS =
		// exceptions https://www.postgresql.org/docs/current/static/errcodes-appendix.html
		'SQLSTATE SQLERRM|10 ' +
		'SUCCESSFUL_COMPLETION WARNING DYNAMIC_RESULT_SETS_RETURNED IMPLICIT_ZERO_BIT_PADDING ' +
		'NULL_VALUE_ELIMINATED_IN_SET_FUNCTION PRIVILEGE_NOT_GRANTED PRIVILEGE_NOT_REVOKED ' +
		'STRING_DATA_RIGHT_TRUNCATION DEPRECATED_FEATURE NO_DATA NO_ADDITIONAL_DYNAMIC_RESULT_SETS_RETURNED ' +
		'SQL_STATEMENT_NOT_YET_COMPLETE CONNECTION_EXCEPTION CONNECTION_DOES_NOT_EXIST CONNECTION_FAILURE ' +
		'SQLCLIENT_UNABLE_TO_ESTABLISH_SQLCONNECTION SQLSERVER_REJECTED_ESTABLISHMENT_OF_SQLCONNECTION ' +
		'TRANSACTION_RESOLUTION_UNKNOWN PROTOCOL_VIOLATION TRIGGERED_ACTION_EXCEPTION FEATURE_NOT_SUPPORTED ' +
		'INVALID_TRANSACTION_INITIATION LOCATOR_EXCEPTION INVALID_LOCATOR_SPECIFICATION INVALID_GRANTOR ' +
		'INVALID_GRANT_OPERATION INVALID_ROLE_SPECIFICATION DIAGNOSTICS_EXCEPTION ' +
		'STACKED_DIAGNOSTICS_ACCESSED_WITHOUT_ACTIVE_HANDLER CASE_NOT_FOUND CARDINALITY_VIOLATION ' +
		'DATA_EXCEPTION ARRAY_SUBSCRIPT_ERROR CHARACTER_NOT_IN_REPERTOIRE DATETIME_FIELD_OVERFLOW ' +
		'DIVISION_BY_ZERO ERROR_IN_ASSIGNMENT ESCAPE_CHARACTER_CONFLICT INDICATOR_OVERFLOW ' +
		'INTERVAL_FIELD_OVERFLOW INVALID_ARGUMENT_FOR_LOGARITHM INVALID_ARGUMENT_FOR_NTILE_FUNCTION ' +
		'INVALID_ARGUMENT_FOR_NTH_VALUE_FUNCTION INVALID_ARGUMENT_FOR_POWER_FUNCTION ' +
		'INVALID_ARGUMENT_FOR_WIDTH_BUCKET_FUNCTION INVALID_CHARACTER_VALUE_FOR_CAST ' +
		'INVALID_DATETIME_FORMAT INVALID_ESCAPE_CHARACTER INVALID_ESCAPE_OCTET INVALID_ESCAPE_SEQUENCE ' +
		'NONSTANDARD_USE_OF_ESCAPE_CHARACTER INVALID_INDICATOR_PARAMETER_VALUE INVALID_PARAMETER_VALUE ' +
		'INVALID_REGULAR_EXPRESSION INVALID_ROW_COUNT_IN_LIMIT_CLAUSE ' +
		'INVALID_ROW_COUNT_IN_RESULT_OFFSET_CLAUSE INVALID_TABLESAMPLE_ARGUMENT INVALID_TABLESAMPLE_REPEAT ' +
		'INVALID_TIME_ZONE_DISPLACEMENT_VALUE INVALID_USE_OF_ESCAPE_CHARACTER MOST_SPECIFIC_TYPE_MISMATCH ' +
		'NULL_VALUE_NOT_ALLOWED NULL_VALUE_NO_INDICATOR_PARAMETER NUMERIC_VALUE_OUT_OF_RANGE ' +
		'SEQUENCE_GENERATOR_LIMIT_EXCEEDED STRING_DATA_LENGTH_MISMATCH STRING_DATA_RIGHT_TRUNCATION ' +
		'SUBSTRING_ERROR TRIM_ERROR UNTERMINATED_C_STRING ZERO_LENGTH_CHARACTER_STRING ' +
		'FLOATING_POINT_EXCEPTION INVALID_TEXT_REPRESENTATION INVALID_BINARY_REPRESENTATION ' +
		'BAD_COPY_FILE_FORMAT UNTRANSLATABLE_CHARACTER NOT_AN_XML_DOCUMENT INVALID_XML_DOCUMENT ' +
		'INVALID_XML_CONTENT INVALID_XML_COMMENT INVALID_XML_PROCESSING_INSTRUCTION ' +
		'INTEGRITY_CONSTRAINT_VIOLATION RESTRICT_VIOLATION NOT_NULL_VIOLATION FOREIGN_KEY_VIOLATION ' +
		'UNIQUE_VIOLATION CHECK_VIOLATION EXCLUSION_VIOLATION INVALID_CURSOR_STATE ' +
		'INVALID_TRANSACTION_STATE ACTIVE_SQL_TRANSACTION BRANCH_TRANSACTION_ALREADY_ACTIVE ' +
		'HELD_CURSOR_REQUIRES_SAME_ISOLATION_LEVEL INAPPROPRIATE_ACCESS_MODE_FOR_BRANCH_TRANSACTION ' +
		'INAPPROPRIATE_ISOLATION_LEVEL_FOR_BRANCH_TRANSACTION ' +
		'NO_ACTIVE_SQL_TRANSACTION_FOR_BRANCH_TRANSACTION READ_ONLY_SQL_TRANSACTION ' +
		'SCHEMA_AND_DATA_STATEMENT_MIXING_NOT_SUPPORTED NO_ACTIVE_SQL_TRANSACTION ' +
		'IN_FAILED_SQL_TRANSACTION IDLE_IN_TRANSACTION_SESSION_TIMEOUT INVALID_SQL_STATEMENT_NAME ' +
		'TRIGGERED_DATA_CHANGE_VIOLATION INVALID_AUTHORIZATION_SPECIFICATION INVALID_PASSWORD ' +
		'DEPENDENT_PRIVILEGE_DESCRIPTORS_STILL_EXIST DEPENDENT_OBJECTS_STILL_EXIST ' +
		'INVALID_TRANSACTION_TERMINATION SQL_ROUTINE_EXCEPTION FUNCTION_EXECUTED_NO_RETURN_STATEMENT ' +
		'MODIFYING_SQL_DATA_NOT_PERMITTED PROHIBITED_SQL_STATEMENT_ATTEMPTED ' +
		'READING_SQL_DATA_NOT_PERMITTED INVALID_CURSOR_NAME EXTERNAL_ROUTINE_EXCEPTION ' +
		'CONTAINING_SQL_NOT_PERMITTED MODIFYING_SQL_DATA_NOT_PERMITTED ' +
		'PROHIBITED_SQL_STATEMENT_ATTEMPTED READING_SQL_DATA_NOT_PERMITTED ' +
		'EXTERNAL_ROUTINE_INVOCATION_EXCEPTION INVALID_SQLSTATE_RETURNED NULL_VALUE_NOT_ALLOWED ' +
		'TRIGGER_PROTOCOL_VIOLATED SRF_PROTOCOL_VIOLATED EVENT_TRIGGER_PROTOCOL_VIOLATED ' +
		'SAVEPOINT_EXCEPTION INVALID_SAVEPOINT_SPECIFICATION INVALID_CATALOG_NAME ' +
		'INVALID_SCHEMA_NAME TRANSACTION_ROLLBACK TRANSACTION_INTEGRITY_CONSTRAINT_VIOLATION ' +
		'SERIALIZATION_FAILURE STATEMENT_COMPLETION_UNKNOWN DEADLOCK_DETECTED ' +
		'SYNTAX_ERROR_OR_ACCESS_RULE_VIOLATION SYNTAX_ERROR INSUFFICIENT_PRIVILEGE CANNOT_COERCE ' +
		'GROUPING_ERROR WINDOWING_ERROR INVALID_RECURSION INVALID_FOREIGN_KEY INVALID_NAME ' +
		'NAME_TOO_LONG RESERVED_NAME DATATYPE_MISMATCH INDETERMINATE_DATATYPE COLLATION_MISMATCH ' +
		'INDETERMINATE_COLLATION WRONG_OBJECT_TYPE GENERATED_ALWAYS UNDEFINED_COLUMN ' +
		'UNDEFINED_FUNCTION UNDEFINED_TABLE UNDEFINED_PARAMETER UNDEFINED_OBJECT ' +
		'DUPLICATE_COLUMN DUPLICATE_CURSOR DUPLICATE_DATABASE DUPLICATE_FUNCTION ' +
		'DUPLICATE_PREPARED_STATEMENT DUPLICATE_SCHEMA DUPLICATE_TABLE DUPLICATE_ALIAS ' +
		'DUPLICATE_OBJECT AMBIGUOUS_COLUMN AMBIGUOUS_FUNCTION AMBIGUOUS_PARAMETER AMBIGUOUS_ALIAS ' +
		'INVALID_COLUMN_REFERENCE INVALID_COLUMN_DEFINITION INVALID_CURSOR_DEFINITION ' +
		'INVALID_DATABASE_DEFINITION INVALID_FUNCTION_DEFINITION ' +
		'INVALID_PREPARED_STATEMENT_DEFINITION INVALID_SCHEMA_DEFINITION INVALID_TABLE_DEFINITION ' +
		'INVALID_OBJECT_DEFINITION WITH_CHECK_OPTION_VIOLATION INSUFFICIENT_RESOURCES DISK_FULL ' +
		'OUT_OF_MEMORY TOO_MANY_CONNECTIONS CONFIGURATION_LIMIT_EXCEEDED PROGRAM_LIMIT_EXCEEDED ' +
		'STATEMENT_TOO_COMPLEX TOO_MANY_COLUMNS TOO_MANY_ARGUMENTS OBJECT_NOT_IN_PREREQUISITE_STATE ' +
		'OBJECT_IN_USE CANT_CHANGE_RUNTIME_PARAM LOCK_NOT_AVAILABLE OPERATOR_INTERVENTION ' +
		'QUERY_CANCELED ADMIN_SHUTDOWN CRASH_SHUTDOWN CANNOT_CONNECT_NOW DATABASE_DROPPED ' +
		'SYSTEM_ERROR IO_ERROR UNDEFINED_FILE DUPLICATE_FILE SNAPSHOT_TOO_OLD CONFIG_FILE_ERROR ' +
		'LOCK_FILE_EXISTS FDW_ERROR FDW_COLUMN_NAME_NOT_FOUND FDW_DYNAMIC_PARAMETER_VALUE_NEEDED ' +
		'FDW_FUNCTION_SEQUENCE_ERROR FDW_INCONSISTENT_DESCRIPTOR_INFORMATION ' +
		'FDW_INVALID_ATTRIBUTE_VALUE FDW_INVALID_COLUMN_NAME FDW_INVALID_COLUMN_NUMBER ' +
		'FDW_INVALID_DATA_TYPE FDW_INVALID_DATA_TYPE_DESCRIPTORS ' +
		'FDW_INVALID_DESCRIPTOR_FIELD_IDENTIFIER FDW_INVALID_HANDLE FDW_INVALID_OPTION_INDEX ' +
		'FDW_INVALID_OPTION_NAME FDW_INVALID_STRING_LENGTH_OR_BUFFER_LENGTH ' +
		'FDW_INVALID_STRING_FORMAT FDW_INVALID_USE_OF_NULL_POINTER FDW_TOO_MANY_HANDLES ' +
		'FDW_OUT_OF_MEMORY FDW_NO_SCHEMAS FDW_OPTION_NAME_NOT_FOUND FDW_REPLY_HANDLE ' +
		'FDW_SCHEMA_NOT_FOUND FDW_TABLE_NOT_FOUND FDW_UNABLE_TO_CREATE_EXECUTION ' +
		'FDW_UNABLE_TO_CREATE_REPLY FDW_UNABLE_TO_ESTABLISH_CONNECTION PLPGSQL_ERROR ' +
		'RAISE_EXCEPTION NO_DATA_FOUND TOO_MANY_ROWS ASSERT_FAILURE INTERNAL_ERROR DATA_CORRUPTED ' +
		'INDEX_CORRUPTED ';

	var FUNCTIONS =
		// https://www.postgresql.org/docs/11/static/functions-aggregate.html
		'ARRAY_AGG AVG BIT_AND BIT_OR BOOL_AND BOOL_OR COUNT EVERY JSON_AGG JSONB_AGG JSON_OBJECT_AGG ' +
		'JSONB_OBJECT_AGG MAX MIN MODE STRING_AGG SUM XMLAGG ' +
		'CORR COVAR_POP COVAR_SAMP REGR_AVGX REGR_AVGY REGR_COUNT REGR_INTERCEPT REGR_R2 REGR_SLOPE ' +
		'REGR_SXX REGR_SXY REGR_SYY STDDEV STDDEV_POP STDDEV_SAMP VARIANCE VAR_POP VAR_SAMP ' +
		'PERCENTILE_CONT PERCENTILE_DISC ' +
		// https://www.postgresql.org/docs/11/static/functions-window.html
		'ROW_NUMBER RANK DENSE_RANK PERCENT_RANK CUME_DIST NTILE LAG LEAD FIRST_VALUE LAST_VALUE NTH_VALUE ' +
		// https://www.postgresql.org/docs/11/static/functions-comparison.html
		'NUM_NONNULLS NUM_NULLS ' +
		// https://www.postgresql.org/docs/11/static/functions-math.html
		'ABS CBRT CEIL CEILING DEGREES DIV EXP FLOOR LN LOG MOD PI POWER RADIANS ROUND SCALE SIGN SQRT ' +
		'TRUNC WIDTH_BUCKET ' +
		'RANDOM SETSEED ' +
		'ACOS ACOSD ASIN ASIND ATAN ATAND ATAN2 ATAN2D COS COSD COT COTD SIN SIND TAN TAND ' +
		// https://www.postgresql.org/docs/11/static/functions-string.html
		'BIT_LENGTH CHAR_LENGTH CHARACTER_LENGTH LOWER OCTET_LENGTH OVERLAY POSITION SUBSTRING TREAT TRIM UPPER ' +
		'ASCII BTRIM CHR CONCAT CONCAT_WS CONVERT CONVERT_FROM CONVERT_TO DECODE ENCODE INITCAP' +
		'LEFT LENGTH LPAD LTRIM MD5 PARSE_IDENT PG_CLIENT_ENCODING QUOTE_IDENT|10 QUOTE_LITERAL|10 ' +
		'QUOTE_NULLABLE|10 REGEXP_MATCH REGEXP_MATCHES REGEXP_REPLACE REGEXP_SPLIT_TO_ARRAY ' +
		'REGEXP_SPLIT_TO_TABLE REPEAT REPLACE REVERSE RIGHT RPAD RTRIM SPLIT_PART STRPOS SUBSTR ' +
		'TO_ASCII TO_HEX TRANSLATE ' +
		// https://www.postgresql.org/docs/11/static/functions-binarystring.html
		'OCTET_LENGTH GET_BIT GET_BYTE SET_BIT SET_BYTE ' +
		// https://www.postgresql.org/docs/11/static/functions-formatting.html
		'TO_CHAR TO_DATE TO_NUMBER TO_TIMESTAMP ' +
		// https://www.postgresql.org/docs/11/static/functions-datetime.html
		'AGE CLOCK_TIMESTAMP|10 DATE_PART DATE_TRUNC ISFINITE JUSTIFY_DAYS JUSTIFY_HOURS JUSTIFY_INTERVAL ' +
		'MAKE_DATE MAKE_INTERVAL|10 MAKE_TIME MAKE_TIMESTAMP|10 MAKE_TIMESTAMPTZ|10 NOW STATEMENT_TIMESTAMP|10 ' +
		'TIMEOFDAY TRANSACTION_TIMESTAMP|10 ' +
		// https://www.postgresql.org/docs/11/static/functions-enum.html
		'ENUM_FIRST ENUM_LAST ENUM_RANGE ' +
		// https://www.postgresql.org/docs/11/static/functions-geometry.html
		'AREA CENTER DIAMETER HEIGHT ISCLOSED ISOPEN NPOINTS PCLOSE POPEN RADIUS WIDTH ' +
		'BOX BOUND_BOX CIRCLE LINE LSEG PATH POLYGON ' +
		// https://www.postgresql.org/docs/11/static/functions-net.html
		'ABBREV BROADCAST HOST HOSTMASK MASKLEN NETMASK NETWORK SET_MASKLEN TEXT INET_SAME_FAMILY' +
		'INET_MERGE MACADDR8_SET7BIT ' +
		// https://www.postgresql.org/docs/11/static/functions-textsearch.html
		'ARRAY_TO_TSVECTOR GET_CURRENT_TS_CONFIG NUMNODE PLAINTO_TSQUERY PHRASETO_TSQUERY WEBSEARCH_TO_TSQUERY ' +
		'QUERYTREE SETWEIGHT STRIP TO_TSQUERY TO_TSVECTOR JSON_TO_TSVECTOR JSONB_TO_TSVECTOR TS_DELETE ' +
		'TS_FILTER TS_HEADLINE TS_RANK TS_RANK_CD TS_REWRITE TSQUERY_PHRASE TSVECTOR_TO_ARRAY ' +
		'TSVECTOR_UPDATE_TRIGGER TSVECTOR_UPDATE_TRIGGER_COLUMN ' +
		// https://www.postgresql.org/docs/11/static/functions-xml.html
		'XMLCOMMENT XMLCONCAT XMLELEMENT XMLFOREST XMLPI XMLROOT ' +
		'XMLEXISTS XML_IS_WELL_FORMED XML_IS_WELL_FORMED_DOCUMENT XML_IS_WELL_FORMED_CONTENT ' +
		'XPATH XPATH_EXISTS XMLTABLE XMLNAMESPACES ' +
		'TABLE_TO_XML TABLE_TO_XMLSCHEMA TABLE_TO_XML_AND_XMLSCHEMA ' +
		'QUERY_TO_XML QUERY_TO_XMLSCHEMA QUERY_TO_XML_AND_XMLSCHEMA ' +
		'CURSOR_TO_XML CURSOR_TO_XMLSCHEMA ' +
		'SCHEMA_TO_XML SCHEMA_TO_XMLSCHEMA SCHEMA_TO_XML_AND_XMLSCHEMA ' +
		'DATABASE_TO_XML DATABASE_TO_XMLSCHEMA DATABASE_TO_XML_AND_XMLSCHEMA ' +
		'XMLATTRIBUTES ' +
		// https://www.postgresql.org/docs/11/static/functions-json.html
		'TO_JSON TO_JSONB ARRAY_TO_JSON ROW_TO_JSON JSON_BUILD_ARRAY JSONB_BUILD_ARRAY JSON_BUILD_OBJECT ' +
		'JSONB_BUILD_OBJECT JSON_OBJECT JSONB_OBJECT JSON_ARRAY_LENGTH JSONB_ARRAY_LENGTH JSON_EACH ' +
		'JSONB_EACH JSON_EACH_TEXT JSONB_EACH_TEXT JSON_EXTRACT_PATH JSONB_EXTRACT_PATH ' +
		'JSON_OBJECT_KEYS JSONB_OBJECT_KEYS JSON_POPULATE_RECORD JSONB_POPULATE_RECORD JSON_POPULATE_RECORDSET ' +
		'JSONB_POPULATE_RECORDSET JSON_ARRAY_ELEMENTS JSONB_ARRAY_ELEMENTS JSON_ARRAY_ELEMENTS_TEXT ' +
		'JSONB_ARRAY_ELEMENTS_TEXT JSON_TYPEOF JSONB_TYPEOF JSON_TO_RECORD JSONB_TO_RECORD JSON_TO_RECORDSET ' +
		'JSONB_TO_RECORDSET JSON_STRIP_NULLS JSONB_STRIP_NULLS JSONB_SET JSONB_INSERT JSONB_PRETTY ' +
		// https://www.postgresql.org/docs/11/static/functions-sequence.html
		'CURRVAL LASTVAL NEXTVAL SETVAL ' +
		// https://www.postgresql.org/docs/11/static/functions-conditional.html
		'COALESCE NULLIF GREATEST LEAST ' +
		// https://www.postgresql.org/docs/11/static/functions-array.html
		'ARRAY_APPEND ARRAY_CAT ARRAY_NDIMS ARRAY_DIMS ARRAY_FILL ARRAY_LENGTH ARRAY_LOWER ARRAY_POSITION ' +
		'ARRAY_POSITIONS ARRAY_PREPEND ARRAY_REMOVE ARRAY_REPLACE ARRAY_TO_STRING ARRAY_UPPER CARDINALITY ' +
		'STRING_TO_ARRAY UNNEST ' +
		// https://www.postgresql.org/docs/11/static/functions-range.html
		'ISEMPTY LOWER_INC UPPER_INC LOWER_INF UPPER_INF RANGE_MERGE ' +
		// https://www.postgresql.org/docs/11/static/functions-srf.html
		'GENERATE_SERIES GENERATE_SUBSCRIPTS ' +
		// https://www.postgresql.org/docs/11/static/functions-info.html
		'CURRENT_DATABASE CURRENT_QUERY CURRENT_SCHEMA|10 CURRENT_SCHEMAS|10 INET_CLIENT_ADDR INET_CLIENT_PORT ' +
		'INET_SERVER_ADDR INET_SERVER_PORT ROW_SECURITY_ACTIVE FORMAT_TYPE ' +
		'TO_REGCLASS TO_REGPROC TO_REGPROCEDURE TO_REGOPER TO_REGOPERATOR TO_REGTYPE TO_REGNAMESPACE TO_REGROLE ' +
		'COL_DESCRIPTION OBJ_DESCRIPTION SHOBJ_DESCRIPTION ' +
		'TXID_CURRENT TXID_CURRENT_IF_ASSIGNED TXID_CURRENT_SNAPSHOT TXID_SNAPSHOT_XIP TXID_SNAPSHOT_XMAX ' +
		'TXID_SNAPSHOT_XMIN TXID_VISIBLE_IN_SNAPSHOT TXID_STATUS ' +
		// https://www.postgresql.org/docs/11/static/functions-admin.html
		'CURRENT_SETTING SET_CONFIG BRIN_SUMMARIZE_NEW_VALUES BRIN_SUMMARIZE_RANGE BRIN_DESUMMARIZE_RANGE ' +
		'GIN_CLEAN_PENDING_LIST ' +
		// https://www.postgresql.org/docs/11/static/functions-trigger.html
		'SUPPRESS_REDUNDANT_UPDATES_TRIGGER ' +
		// ihttps://www.postgresql.org/docs/devel/static/lo-funcs.html
		'LO_FROM_BYTEA LO_PUT LO_GET LO_CREAT LO_CREATE LO_UNLINK LO_IMPORT LO_EXPORT LOREAD LOWRITE ' +
		//
		'GROUPING CAST ';

		var FUNCTIONS_RE =
			FUNCTIONS.trim()
							 .split(' ')
							 .map( function(val) { return val.split('|')[0]; } )
							 .join('|');

		return {
				aliases: ['postgres','postgresql'],
				case_insensitive: true,
				keywords: {
					keyword:
						SQL_KW + PLPGSQL_KW + ROLE_ATTRS,
					built_in:
						SQL_BI + PLPGSQL_BI + PLPGSQL_EXCEPTIONS,
				},
				// Forbid some cunstructs from other languages to improve autodetect. In fact
				// "[a-z]:" is legal (as part of array slice), but improbabal.
				illegal: /:==|\W\s*\(\*|(^|\s)\$[a-z]|{{|[a-z]:\s*$|\.\.\.|TO:|DO:/,
				contains: [
					// special handling of some words, which are reserved only in some contexts
					{
						className: 'keyword',
						variants: [
							{ begin: /\bTEXT\s*SEARCH\b/ },
							{ begin: /\b(PRIMARY|FOREIGN|FOR(\s+NO)?)\s+KEY\b/ },
							{ begin: /\bPARALLEL\s+(UNSAFE|RESTRICTED|SAFE)\b/ },
							{ begin: /\bSTORAGE\s+(PLAIN|EXTERNAL|EXTENDED|MAIN)\b/ },
							{ begin: /\bMATCH\s+(FULL|PARTIAL|SIMPLE)\b/ },
							{ begin: /\bNULLS\s+(FIRST|LAST)\b/ },
							{ begin: /\bEVENT\s+TRIGGER\b/ },
							{ begin: /\b(MAPPING|OR)\s+REPLACE\b/ },
							{ begin: /\b(FROM|TO)\s+(PROGRAM|STDIN|STDOUT)\b/ },
							{ begin: /\b(SHARE|EXCLUSIVE)\s+MODE\b/ },
							{ begin: /\b(LEFT|RIGHT)\s+(OUTER\s+)?JOIN\b/ },
							{ begin: /\b(FETCH|MOVE)\s+(NEXT|PRIOR|FIRST|LAST|ABSOLUTE|RELATIVE|FORWARD|BACKWARD)\b/ },
							{ begin: /\bPRESERVE\s+ROWS\b/ },
							{ begin: /\bDISCARD\s+PLANS\b/ },
							{ begin: /\bREFERENCING\s+(OLD|NEW)\b/ },
							{ begin: /\bSKIP\s+LOCKED\b/ },
							{ begin: /\bGROUPING\s+SETS\b/ },
							{ begin: /\b(BINARY|INSENSITIVE|SCROLL|NO\s+SCROLL)\s+(CURSOR|FOR)\b/ },
							{ begin: /\b(WITH|WITHOUT)\s+HOLD\b/ },
							{ begin: /\bWITH\s+(CASCADED|LOCAL)\s+CHECK\s+OPTION\b/ },
							{ begin: /\bEXCLUDE\s+(TIES|NO\s+OTHERS)\b/ },
							{ begin: /\bFORMAT\s+(TEXT|XML|JSON|YAML)\b/ },
							{ begin: /\bSET\s+((SESSION|LOCAL)\s+)?NAMES\b/ },
							{ begin: /\bIS\s+(NOT\s+)?UNKNOWN\b/ },
							{ begin: /\bSECURITY\s+LABEL\b/ },
							{ begin: /\bSTANDALONE\s+(YES|NO|NO\s+VALUE)\b/ },
							{ begin: /\bWITH\s+(NO\s+)?DATA\b/ },
							{ begin: /\b(FOREIGN|SET)\s+DATA\b/ },
							{ begin: /\bSET\s+(CATALOG|CONSTRAINTS)\b/ },
							{ begin: /\b(WITH|FOR)\s+ORDINALITY\b/ },
							{ begin: /\bIS\s+(NOT\s+)?DOCUMENT\b/ },
							{ begin: /\bXML\s+OPTION\s+(DOCUMENT|CONTENT)\b/ },
							{ begin: /\b(STRIP|PRESERVE)\s+WHITESPACE\b/ },
							{ begin: /\bNO\s+(ACTION|MAXVALUE|MINVALUE)\b/ },
							{ begin: /\bPARTITION\s+BY\s+(RANGE|LIST|HASH)\b/ },
							{ begin: /\bAT\s+TIME\s+ZONE\b/ },
							{ begin: /\bGRANTED\s+BY\b/ },
							{ begin: /\bRETURN\s+(QUERY|NEXT)\b/ },
							{ begin: /\b(ATTACH|DETACH)\s+PARTITION\b/ },
							{ begin: /\bFORCE\s+ROW\s+LEVEL\s+SECURITY\b/ },
							{ begin: /\b(INCLUDING|EXCLUDING)\s+(COMMENTS|CONSTRAINTS|DEFAULTS|IDENTITY|INDEXES|STATISTICS|STORAGE|ALL)\b/ },
							{ begin: /\bAS\s+(ASSIGNMENT|IMPLICIT|PERMISSIVE|RESTRICTIVE|ENUM|RANGE)\b/ }
						]
					},
					// functions named as keywords, followed by '('
					{
						begin: /\b(FORMAT|FAMILY|VERSION)\s*\(/,
						//keywords: { built_in: 'FORMAT FAMILY VERSION' }
					},
					// INCLUDE ( ... ) in index_parameters in CREATE TABLE
					{
						begin: /\bINCLUDE\s*\(/,
						keywords: 'INCLUDE'
					},
					// not highlight RANGE if not in frame_clause (not 100% correct, but seems satisfactory)
					{
						begin: /\bRANGE(?!\s*(BETWEEN|UNBOUNDED|CURRENT|[-0-9]+))/
					},
					// disable highlighting in commands CREATE AGGREGATE/COLLATION/DATABASE/OPERTOR/TEXT SEARCH .../TYPE
					// and in PL/pgSQL RAISE ... USING
					{
						begin: /\b(VERSION|OWNER|TEMPLATE|TABLESPACE|CONNECTION\s+LIMIT|PROCEDURE|RESTRICT|JOIN|PARSER|COPY|START|END|COLLATION|INPUT|ANALYZE|STORAGE|LIKE|DEFAULT|DELIMITER|ENCODING|COLUMN|CONSTRAINT|TABLE|SCHEMA)\s*=/
					},
					// PG_smth; HAS_some_PRIVILEGE
					{
						//className: 'built_in',
						begin: /\b(PG_\w+?|HAS_[A-Z_]+_PRIVILEGE)\b/,
						relevance: 10
					},
					// extract
					{
						begin: /\bEXTRACT\s*\(/,
						end: /\bFROM\b/,
						returnEnd: true,
						keywords: {
							//built_in: 'EXTRACT',
							type:     'CENTURY DAY DECADE DOW DOY EPOCH HOUR ISODOW ISOYEAR MICROSECONDS ' +
												'MILLENNIUM MILLISECONDS MINUTE MONTH QUARTER SECOND TIMEZONE TIMEZONE_HOUR ' +
												'TIMEZONE_MINUTE WEEK YEAR'
						}
					},
					// xmlelement, xmlpi - special NAME
					{
						begin: /\b(XMLELEMENT|XMLPI)\s*\(\s*NAME/,
						keywords: {
							//built_in: 'XMLELEMENT XMLPI',
							keyword:  'NAME'
						}
					},
					// xmlparse, xmlserialize
					{
						begin: /\b(XMLPARSE|XMLSERIALIZE)\s*\(\s*(DOCUMENT|CONTENT)/,
						keywords: {
							//built_in: 'XMLPARSE XMLSERIALIZE',
							keyword:  'DOCUMENT CONTENT'
						}
					},
					// Sequences. We actually skip everything between CACHE|INCREMENT|MAXVALUE|MINVALUE and
					// nearest following numeric constant. Without with trick we find a lot of "keywords"
					// in 'avrasm' autodetection test...
					{
						beginKeywords: 'CACHE INCREMENT MAXVALUE MINVALUE',
						end: hljs.C_NUMBER_RE,
						returnEnd: true,
						keywords: 'BY CACHE INCREMENT MAXVALUE MINVALUE'
					},
					// WITH|WITHOUT TIME ZONE as part of datatype
					{
						className: 'type',
						begin: /\b(WITH|WITHOUT)\s+TIME\s+ZONE\b/
					},
					// INTERVAL optional fields
					{
						className: 'type',
						begin: /\bINTERVAL\s+(YEAR|MONTH|DAY|HOUR|MINUTE|SECOND)(\s+TO\s+(MONTH|HOUR|MINUTE|SECOND))?\b/
					},
					// Pseudo-types which allowed only as return type
					{
						begin: /\bRETURNS\s+(LANGUAGE_HANDLER|TRIGGER|EVENT_TRIGGER|FDW_HANDLER|INDEX_AM_HANDLER|TSM_HANDLER)\b/,
						keywords: {
							keyword: 'RETURNS',
							type: 'LANGUAGE_HANDLER TRIGGER EVENT_TRIGGER FDW_HANDLER INDEX_AM_HANDLER TSM_HANDLER'
						}
					},
					// Known functions - only when followed by '('
					{
						begin: '\\b(' + FUNCTIONS_RE + ')\\s*\\('
						//keywords: { built_in: FUNCTIONS }
					},
					// Types
					{
						begin: '\\.(' + TYPES_RE + ')\\b' // prevent highlight as type, say, 'oid' in 'pgclass.oid'
					},
					{
						begin: '\\b(' + TYPES_RE + ')\\s+PATH\\b', // in XMLTABLE
						keywords: {
							keyword: 'PATH', // hopefully no one would use PATH type in XMLTABLE...
							type: TYPES.replace('PATH ','')
						}
					},
					{
						className: 'type',
						begin: '\\b(' + TYPES_RE + ')\\b'
					},
					// Strings, see https://www.postgresql.org/docs/11/static/sql-syntax-lexical.html#SQL-SYNTAX-CONSTANTS
					{
						className: 'string',
						begin: '\'', end: '\'',
						contains: [{begin: '\'\''}]
					},
					{
						className: 'string',
						begin: '(e|E|u&|U&)\'', end: '\'',
						contains: [{begin: '\\\\.'}],
						relevance: 10
					},
					{
						begin: DOLLAR_STRING,
						endSameAsBegin: true,
						contains: [
							{
								// actually we want them all except SQL; listed are those with known implementations
								// and XML + JSON just in case
								//subLanguage: ['pgsql','perl','python','tcl','r','lua','java','php','ruby','bash','scheme','xml','json'], // Fix by Unixman
								subLanguage: ['pgsql','perl','python','tcl','lua','php','bash','xml','json'],
								endsWithParent: true
							}
						]
					},
					// identifiers in quotes
					{
						className: 'string',
						begin: '"', end: '"',
						contains: [{begin: '""'}]
					},
					// numbers
					hljs.C_NUMBER_MODE,
					// comments
					hljs.C_BLOCK_COMMENT_MODE,
					COMMENT_MODE,
					// PL/pgSQL staff
					// %ROWTYPE, %TYPE, $n
					{
						className: 'meta',
						variants: [
							{begin: '%(ROW)?TYPE', relevance: 10}, // %TYPE, %ROWTYPE
							{begin: '\\$\\d+'},                    // $n
							{begin: '^#\\w', end: '$'}             // #compiler option
						]
					},
					// <<labeles>>
					{
						className: 'symbol',
						begin: LABEL,
						relevance: 10
					}
				]
	};
}
);

// #END

// === web/php.js

/*
Language: PHP
Author: Victor Karamzin <Victor.Karamzin@enterra-inc.com>
Contributors: Evgeny Stepanischev <imbolk@gmail.com>, Ivan Sagalaev <maniac@softwaremaniacs.org>
Category: common
### modified by unixman: fix to better parse PHP code
*/

// syntax/web/php.js
// HighlightJs: v.9.13.1

hljs.registerLanguage('php',
function(hljs) {
	var VARIABLE = {
		//begin: '\\$+[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*' // Fix By Unixman
		begin: '\\$+[a-zA-Z_]+[a-zA-Z0-9_]*'
	};
	var PREPROCESSOR = {
		className: 'meta', begin: /<\?(php)?|\?>/
	};
	var STRING = {
		className: 'string',
		contains: [hljs.BACKSLASH_ESCAPE, PREPROCESSOR],
		variants: [
			{
				begin: 'b"', end: '"'
			},
			{
				begin: 'b\'', end: '\''
			},
			hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),
			hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null})
		]
	};
	var NUMBER = {variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]};
	return {
		aliases: ['php', 'php3', 'php4', 'php5', 'php6', 'php7'],
		case_insensitive: true,
		keywords:
			'and include_once list abstract global private echo interface as static endswitch ' +
			'array null if endwhile or const for endforeach self var while isset public ' +
			'protected exit foreach throw elseif include __FILE__ empty require_once do xor ' +
			'return parent clone use __CLASS__ __LINE__ else break print eval new ' +
			'catch __METHOD__ case exception default die require __FUNCTION__ ' +
			'enddeclare final try switch continue endfor endif declare unset true false bool int float string ' +
			'trait goto instanceof insteadof __DIR__ __NAMESPACE__ ' +
			'yield finally',
		contains: [
			hljs.HASH_COMMENT_MODE,
			hljs.COMMENT('//', '$', {contains: [PREPROCESSOR]}),
			hljs.COMMENT(
				'/\\*',
				'\\*/',
				{
					contains: [
						{
							className: 'doctag',
							begin: '@[A-Za-z]+'
						}
					]
				}
			),
			hljs.COMMENT(
				'__halt_compiler.+?;',
				false,
				{
					endsWithParent: true,
					keywords: '__halt_compiler',
					lexemes: hljs.UNDERSCORE_IDENT_RE
				}
			),
			{
				className: 'string',
				begin: /<<<['"]?\w+['"]?$/, end: /^\w+;?$/,
				contains: [
					hljs.BACKSLASH_ESCAPE,
					{
						className: 'subst',
						variants: [
							{begin: /\$\w+/},
							{begin: /\{\$/, end: /\}/}
						]
					}
				]
			},
			PREPROCESSOR,
			{
			//	className: 'keyword', begin: /\$this\b/ // Fix By Unixman
				className: 'variable', begin: /\$[a-zA-Z0-9_]+\b/
			},
			VARIABLE,
			{
				// swallow composed identifiers to avoid parsing them as keywords
				begin: /(::|->)+[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*/
			},
			{
				className: 'function',
				beginKeywords: 'function', end: /[;{]/, excludeEnd: true,
				illegal: '\\$|\\[|%',
				contains: [
					hljs.UNDERSCORE_TITLE_MODE,
					{
						className: 'params',
						begin: '\\(', end: '\\)',
						contains: [
							'self',
							VARIABLE,
							hljs.C_BLOCK_COMMENT_MODE,
							STRING,
							NUMBER
						]
					}
				]
			},
			{
				className: 'class',
				beginKeywords: 'class interface', end: '{', excludeEnd: true,
				illegal: /[:\(\$"]/,
				contains: [
					{beginKeywords: 'extends implements'},
					hljs.UNDERSCORE_TITLE_MODE
				]
			},
			{
				beginKeywords: 'namespace', end: ';',
				illegal: /[\.']/,
				contains: [hljs.UNDERSCORE_TITLE_MODE]
			},
			{
				beginKeywords: 'use', end: ';',
				contains: [hljs.UNDERSCORE_TITLE_MODE]
			},
			{
				begin: '=>' // No markup, just a relevance booster
			},
			STRING,
			NUMBER
		]
	};
}
);

// #END

// === web/scss.js

/*
Language: SCSS
Author: Kurt Emch <kurt@kurtemch.com>
Category: css
*/

// syntax/web/scss.js
// HighlightJs: v.9.13.1

hljs.registerLanguage('scss',
function(hljs) {
	var IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';
	var VARIABLE = {
		className: 'variable',
		begin: '(\\$' + IDENT_RE + ')\\b'
	};
	var HEXCOLOR = {
		className: 'number', begin: '#[0-9A-Fa-f]+'
	};
	var DEF_INTERNALS = {
		className: 'attribute',
		begin: '[A-Z\\_\\.\\-]+', end: ':',
		excludeEnd: true,
		illegal: '[^\\s]',
		starts: {
			endsWithParent: true, excludeEnd: true,
			contains: [
				HEXCOLOR,
				hljs.CSS_NUMBER_MODE,
				hljs.QUOTE_STRING_MODE,
				hljs.APOS_STRING_MODE,
				hljs.C_BLOCK_COMMENT_MODE,
				{
					className: 'meta', begin: '!important'
				}
			]
		}
	};
	return {
		case_insensitive: true,
		illegal: '[=/|\']',
		contains: [
			hljs.C_LINE_COMMENT_MODE,
			hljs.C_BLOCK_COMMENT_MODE,
			{
				className: 'selector-id', begin: '\\#[A-Za-z0-9_-]+',
				relevance: 0
			},
			{
				className: 'selector-class', begin: '\\.[A-Za-z0-9_-]+',
				relevance: 0
			},
			{
				className: 'selector-attr', begin: '\\[', end: '\\]',
				illegal: '$'
			},
			{
				className: 'selector-tag', // begin: IDENT_RE, end: '[,|\\s]'
				begin: '\\b(a|abbr|acronym|address|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|command|datalist|dd|del|details|dfn|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|frame|frameset|(h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|keygen|label|legend|li|link|map|mark|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|rp|rt|ruby|samp|script|section|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video)\\b',
				relevance: 0
			},
			{
				begin: ':(visited|valid|root|right|required|read-write|read-only|out-range|optional|only-of-type|only-child|nth-of-type|nth-last-of-type|nth-last-child|nth-child|not|link|left|last-of-type|last-child|lang|invalid|indeterminate|in-range|hover|focus|first-of-type|first-line|first-letter|first-child|first|enabled|empty|disabled|default|checked|before|after|active)'
			},
			{
				begin: '::(after|before|choices|first-letter|first-line|repeat-index|repeat-item|selection|value)'
			},
			VARIABLE,
			{
				className: 'attribute',
				begin: '\\b(z-index|word-wrap|word-spacing|word-break|width|widows|white-space|visibility|vertical-align|unicode-bidi|transition-timing-function|transition-property|transition-duration|transition-delay|transition|transform-style|transform-origin|transform|top|text-underline-position|text-transform|text-shadow|text-rendering|text-overflow|text-indent|text-decoration-style|text-decoration-line|text-decoration-color|text-decoration|text-align-last|text-align|tab-size|table-layout|right|resize|quotes|position|pointer-events|perspective-origin|perspective|page-break-inside|page-break-before|page-break-after|padding-top|padding-right|padding-left|padding-bottom|padding|overflow-y|overflow-x|overflow-wrap|overflow|outline-width|outline-style|outline-offset|outline-color|outline|orphans|order|opacity|object-position|object-fit|normal|none|nav-up|nav-right|nav-left|nav-index|nav-down|min-width|min-height|max-width|max-height|mask|marks|margin-top|margin-right|margin-left|margin-bottom|margin|list-style-type|list-style-position|list-style-image|list-style|line-height|letter-spacing|left|justify-content|initial|inherit|ime-mode|image-orientation|image-resolution|image-rendering|icon|hyphens|height|font-weight|font-variant-ligatures|font-variant|font-style|font-stretch|font-size-adjust|font-size|font-language-override|font-kerning|font-feature-settings|font-family|font|float|flex-wrap|flex-shrink|flex-grow|flex-flow|flex-direction|flex-basis|flex|filter|empty-cells|display|direction|cursor|counter-reset|counter-increment|content|column-width|column-span|column-rule-width|column-rule-style|column-rule-color|column-rule|column-gap|column-fill|column-count|columns|color|clip-path|clip|clear|caption-side|break-inside|break-before|break-after|box-sizing|box-shadow|box-decoration-break|bottom|border-width|border-top-width|border-top-style|border-top-right-radius|border-top-left-radius|border-top-color|border-top|border-style|border-spacing|border-right-width|border-right-style|border-right-color|border-right|border-radius|border-left-width|border-left-style|border-left-color|border-left|border-image-width|border-image-source|border-image-slice|border-image-repeat|border-image-outset|border-image|border-color|border-collapse|border-bottom-width|border-bottom-style|border-bottom-right-radius|border-bottom-left-radius|border-bottom-color|border-bottom|border|background-size|background-repeat|background-position|background-origin|background-image|background-color|background-clip|background-attachment|background-blend-mode|background|backface-visibility|auto|animation-timing-function|animation-play-state|animation-name|animation-iteration-count|animation-fill-mode|animation-duration|animation-direction|animation-delay|animation|align-self|align-items|align-content)\\b',
				illegal: '[^\\s]'
			},
			{
				begin: '\\b(whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|underline|transparent|top|thin|thick|text|text-top|text-bottom|tb-rl|table-header-group|table-footer-group|sw-resize|super|strict|static|square|solid|small-caps|separate|se-resize|scroll|s-resize|rtl|row-resize|ridge|right|repeat|repeat-y|repeat-x|relative|progress|pointer|overline|outside|outset|oblique|nowrap|not-allowed|normal|none|nw-resize|no-repeat|no-drop|newspaper|ne-resize|n-resize|move|middle|medium|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|list-item|line|line-through|line-edge|lighter|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline|inline-block|inherit|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|horizontal|hidden|help|hand|groove|fixed|ellipsis|e-resize|double|dotted|distribute|distribute-space|distribute-letter|distribute-all-lines|disc|disabled|default|decimal|dashed|crosshair|collapse|col-resize|circle|char|center|capitalize|break-word|break-all|bottom|both|bolder|bold|block|bidi-override|below|baseline|auto|always|all-scroll|absolute|table|table-cell)\\b'
			},
			{
				begin: ':', end: ';',
				contains: [
					VARIABLE,
					HEXCOLOR,
					hljs.CSS_NUMBER_MODE,
					hljs.QUOTE_STRING_MODE,
					hljs.APOS_STRING_MODE,
					{
						className: 'meta', begin: '!important'
					}
				]
			},
			{
				begin: '@', end: '[{;]',
				keywords: 'mixin include extend for if else each while charset import debug media page content font-face namespace warn',
				contains: [
					VARIABLE,
					hljs.QUOTE_STRING_MODE,
					hljs.APOS_STRING_MODE,
					HEXCOLOR,
					hljs.CSS_NUMBER_MODE,
					{
						begin: '\\s[A-Za-z0-9_.-]+',
						relevance: 0
					}
				]
			}
		]
	};
}
);

// #END

// === web/sql.js

/*
 Language: SQL
 Contributors: Nikolay Lisienko <info@neor.ru>, Heiko August <post@auge8472.de>, Travis Odom <travis.a.odom@gmail.com>, Vadimtro <vadimtro@yahoo.com>, Benjamin Auder <benjamin.auder@gmail.com>
 Category: common
 */

// syntax/web/sql.js
// HighlightJs: v.9.13.1

hljs.registerLanguage('sql',
function(hljs) {
	var COMMENT_MODE = hljs.COMMENT('--', '$');
	return {
		case_insensitive: true,
		illegal: /[<>{}*]/,
		contains: [
			{
				beginKeywords:
					'begin end start commit rollback savepoint lock alter create drop rename call ' +
					'delete do handler insert load replace select truncate update set show pragma grant ' +
					'merge describe use explain help declare prepare execute deallocate release ' +
					'unlock purge reset change stop analyze cache flush optimize repair kill ' +
					'install uninstall checksum restore check backup revoke comment with',
				end: /;/, endsWithParent: true,
				lexemes: /[\w\.]+/,
				keywords: {
					keyword:
						'as abort abs absolute acc acce accep accept access accessed accessible account acos action activate add ' +
						'addtime admin administer advanced advise aes_decrypt aes_encrypt after agent aggregate ali alia alias ' +
						'allocate allow alter always analyze ancillary and any anydata anydataset anyschema anytype apply ' +
						'archive archived archivelog are as asc ascii asin assembly assertion associate asynchronous at atan ' +
						'atn2 attr attri attrib attribu attribut attribute attributes audit authenticated authentication authid ' +
						'authors auto autoallocate autodblink autoextend automatic availability avg backup badfile basicfile ' +
						'before begin beginning benchmark between bfile bfile_base big bigfile bin binary_double binary_float ' +
						'binlog bit_and bit_count bit_length bit_or bit_xor bitmap blob_base block blocksize body both bound ' +
						'buffer_cache buffer_pool build bulk by byte byteordermark bytes cache caching call calling cancel ' +
						'capacity cascade cascaded case cast catalog category ceil ceiling chain change changed char_base ' +
						'char_length character_length characters characterset charindex charset charsetform charsetid check ' +
						'checksum checksum_agg child choose chr chunk class cleanup clear client clob clob_base clone close ' +
						'cluster_id cluster_probability cluster_set clustering coalesce coercibility col collate collation ' +
						'collect colu colum column column_value columns columns_updated comment commit compact compatibility ' +
						'compiled complete composite_limit compound compress compute concat concat_ws concurrent confirm conn ' +
						'connec connect connect_by_iscycle connect_by_isleaf connect_by_root connect_time connection ' +
						'consider consistent constant constraint constraints constructor container content contents context ' +
						'contributors controlfile conv convert convert_tz corr corr_k corr_s corresponding corruption cos cost ' +
						'count count_big counted covar_pop covar_samp cpu_per_call cpu_per_session crc32 create creation ' +
						'critical cross cube cume_dist curdate current current_date current_time current_timestamp current_user ' +
						'cursor curtime customdatum cycle data database databases datafile datafiles datalength date_add ' +
						'date_cache date_format date_sub dateadd datediff datefromparts datename datepart datetime2fromparts ' +
						'day day_to_second dayname dayofmonth dayofweek dayofyear days db_role_change dbtimezone ddl deallocate ' +
						'declare decode decompose decrement decrypt deduplicate def defa defau defaul default defaults ' +
						'deferred defi defin define degrees delayed delegate delete delete_all delimited demand dense_rank ' +
						'depth dequeue des_decrypt des_encrypt des_key_file desc descr descri describ describe descriptor ' +
						'deterministic diagnostics difference dimension direct_load directory disable disable_all ' +
						'disallow disassociate discardfile disconnect diskgroup distinct distinctrow distribute distributed div ' +
						'do document domain dotnet double downgrade drop dumpfile duplicate duration each edition editionable ' +
						'editions element ellipsis else elsif elt empty enable enable_all enclosed encode encoding encrypt ' +
						'end end-exec endian enforced engine engines enqueue enterprise entityescaping eomonth error errors ' +
						'escaped evalname evaluate event eventdata events except exception exceptions exchange exclude excluding ' +
						'execu execut execute exempt exists exit exp expire explain export export_set extended extent external ' +
						'external_1 external_2 externally extract failed failed_login_attempts failover failure far fast ' +
						'feature_set feature_value fetch field fields file file_name_convert filesystem_like_logging final ' +
						'finish first first_value fixed flash_cache flashback floor flush following follows for forall force foreign ' +
						'form forma format found found_rows freelist freelists freepools fresh from from_base64 from_days ' +
						'ftp full function general generated get get_format get_lock getdate getutcdate global global_name ' +
						'globally go goto grant grants greatest group group_concat group_id grouping grouping_id groups ' +
						'gtid_subtract guarantee guard handler hash hashkeys having hea head headi headin heading heap help hex ' +
						'hierarchy high high_priority hosts hour http id ident_current ident_incr ident_seed identified ' +
						'identity idle_time if ifnull ignore iif ilike ilm immediate import in include including increment ' +
						'index indexes indexing indextype indicator indices inet6_aton inet6_ntoa inet_aton inet_ntoa infile ' +
						'initial initialized initially initrans inmemory inner innodb input insert install instance instantiable ' +
						'instr interface interleaved intersect into invalidate invisible is is_free_lock is_ipv4 is_ipv4_compat ' +
						'is_not is_not_null is_used_lock isdate isnull isolation iterate java join json json_exists ' +
						'keep keep_duplicates key keys kill language large last last_day last_insert_id last_value lax lcase ' +
						'lead leading least leaves left len lenght length less level levels library like like2 like4 likec limit ' +
						'lines link list listagg little ln load load_file lob lobs local localtime localtimestamp locate ' +
						'locator lock locked log log10 log2 logfile logfiles logging logical logical_reads_per_call ' +
						'logoff logon logs long loop low low_priority lower lpad lrtrim ltrim main make_set makedate maketime ' +
						'managed management manual map mapping mask master master_pos_wait match matched materialized max ' +
						'maxextents maximize maxinstances maxlen maxlogfiles maxloghistory maxlogmembers maxsize maxtrans ' +
						'md5 measures median medium member memcompress memory merge microsecond mid migration min minextents ' +
						'minimum mining minus minute minvalue missing mod mode model modification modify module monitoring month ' +
						'months mount move movement multiset mutex name name_const names nan national native natural nav nchar ' +
						'nclob nested never new newline next nextval no no_write_to_binlog noarchivelog noaudit nobadfile ' +
						'nocheck nocompress nocopy nocycle nodelay nodiscardfile noentityescaping noguarantee nokeep nologfile ' +
						'nomapping nomaxvalue nominimize nominvalue nomonitoring none noneditionable nonschema noorder ' +
						'nopr nopro noprom nopromp noprompt norely noresetlogs noreverse normal norowdependencies noschemacheck ' +
						'noswitch not nothing notice notnull notrim novalidate now nowait nth_value nullif nulls num numb numbe ' +
						'nvarchar nvarchar2 object ocicoll ocidate ocidatetime ociduration ociinterval ociloblocator ocinumber ' +
						'ociref ocirefcursor ocirowid ocistring ocitype oct octet_length of off offline offset oid oidindex old ' +
						'on online only opaque open operations operator optimal optimize option optionally or oracle oracle_date ' +
						'oradata ord ordaudio orddicom orddoc order ordimage ordinality ordvideo organization orlany orlvary ' +
						'out outer outfile outline output over overflow overriding package pad parallel parallel_enable ' +
						'parameters parent parse partial partition partitions pascal passing password password_grace_time ' +
						'password_lock_time password_reuse_max password_reuse_time password_verify_function patch path patindex ' +
						'pctincrease pctthreshold pctused pctversion percent percent_rank percentile_cont percentile_disc ' +
						'performance period period_add period_diff permanent physical pi pipe pipelined pivot pluggable plugin ' +
						'policy position post_transaction pow power pragma prebuilt precedes preceding precision prediction ' +
						'prediction_cost prediction_details prediction_probability prediction_set prepare present preserve ' +
						'prior priority private private_sga privileges procedural procedure procedure_analyze processlist ' +
						'profiles project prompt protection public publishingservername purge quarter query quick quiesce quota ' +
						'quotename radians raise rand range rank raw read reads readsize rebuild record records ' +
						'recover recovery recursive recycle redo reduced ref reference referenced references referencing refresh ' +
						'regexp_like register regr_avgx regr_avgy regr_count regr_intercept regr_r2 regr_slope regr_sxx regr_sxy ' +
						'reject rekey relational relative relaylog release release_lock relies_on relocate rely rem remainder rename ' +
						'repair repeat replace replicate replication required reset resetlogs resize resource respect restore ' +
						'restricted result result_cache resumable resume retention return returning returns reuse reverse revoke ' +
						'right rlike role roles rollback rolling rollup round row row_count rowdependencies rowid rownum rows ' +
						'rtrim rules safe salt sample save savepoint sb1 sb2 sb4 scan schema schemacheck scn scope scroll ' +
						'sdo_georaster sdo_topo_geometry search sec_to_time second section securefile security seed segment select ' +
						'self sequence sequential serializable server servererror session session_user sessions_per_user set ' +
						'sets settings sha sha1 sha2 share shared shared_pool short show shrink shutdown si_averagecolor ' +
						'si_colorhistogram si_featurelist si_positionalcolor si_stillimage si_texture siblings sid sign sin ' +
						'size size_t sizes skip slave sleep smalldatetimefromparts smallfile snapshot some soname sort soundex ' +
						'source space sparse spfile split sql sql_big_result sql_buffer_result sql_cache sql_calc_found_rows ' +
						'sql_small_result sql_variant_property sqlcode sqldata sqlerror sqlname sqlstate sqrt square standalone ' +
						'standby start starting startup statement static statistics stats_binomial_test stats_crosstab ' +
						'stats_ks_test stats_mode stats_mw_test stats_one_way_anova stats_t_test_ stats_t_test_indep ' +
						'stats_t_test_one stats_t_test_paired stats_wsr_test status std stddev stddev_pop stddev_samp stdev ' +
						'stop storage store stored str str_to_date straight_join strcmp strict string struct stuff style subdate ' +
						'subpartition subpartitions substitutable substr substring subtime subtring_index subtype success sum ' +
						'suspend switch switchoffset switchover sync synchronous synonym sys sys_xmlagg sysasm sysaux sysdate ' +
						'sysdatetimeoffset sysdba sysoper system system_user sysutcdatetime table tables tablespace tan tdo ' +
						'template temporary terminated tertiary_weights test than then thread through tier ties time time_format ' +
						'time_zone timediff timefromparts timeout timestamp timestampadd timestampdiff timezone_abbr ' +
						'timezone_minute timezone_region to to_base64 to_date to_days to_seconds todatetimeoffset trace tracking ' +
						'transaction transactional translate translation treat trigger trigger_nestlevel triggers trim truncate ' +
						'try_cast try_convert try_parse type ub1 ub2 ub4 ucase unarchived unbounded uncompress ' +
						'under undo unhex unicode uniform uninstall union unique unix_timestamp unknown unlimited unlock unnest unpivot ' +
						'unrecoverable unsafe unsigned until untrusted unusable unused update updated upgrade upped upper upsert ' +
						'url urowid usable usage use use_stored_outlines user user_data user_resources users using utc_date ' +
						'utc_timestamp uuid uuid_short validate validate_password_strength validation valist value values var ' +
						'var_samp varcharc vari varia variab variabl variable variables variance varp varraw varrawc varray ' +
						'verify version versions view virtual visible void wait wallet warning warnings week weekday weekofyear ' +
						'wellformed when whene whenev wheneve whenever where while whitespace with within without work wrapped ' +
						'xdb xml xmlagg xmlattributes xmlcast xmlcolattval xmlelement xmlexists xmlforest xmlindex xmlnamespaces ' +
						'xmlpi xmlquery xmlroot xmlschema xmlserialize xmltable xmltype xor year year_to_month years yearweek',
					literal:
						'true false null unknown',
					built_in:
						'array bigint binary bit blob bool boolean char character date dec decimal float int int8 integer interval number ' +
						'numeric real record serial serial8 smallint text time timestamp varchar varying void'
				},
				contains: [
					{
						className: 'string',
						begin: '\'', end: '\'',
						contains: [hljs.BACKSLASH_ESCAPE, {begin: '\'\''}]
					},
					{
						className: 'string',
						begin: '"', end: '"',
						contains: [hljs.BACKSLASH_ESCAPE, {begin: '""'}]
					},
					{
						className: 'string',
						begin: '`', end: '`',
						contains: [hljs.BACKSLASH_ESCAPE]
					},
					hljs.C_NUMBER_MODE,
					hljs.C_BLOCK_COMMENT_MODE,
					COMMENT_MODE,
					hljs.HASH_COMMENT_MODE
				]
			},
			hljs.C_BLOCK_COMMENT_MODE,
			COMMENT_MODE,
			hljs.HASH_COMMENT_MODE
		]
	};
}
);

// #END

// === web/xml.js

/*
Language: HTML, XML
Category: common
*/

// syntax/web/xml.js
// HighlightJs: v.9.13.1

hljs.registerLanguage('xml',
function(hljs) {
	var XML_IDENT_RE = '[A-Za-z0-9\\._:-]+';
	var TAG_INTERNALS = {
		endsWithParent: true,
		illegal: /</,
		relevance: 0,
		contains: [
			{
				className: 'attr',
				begin: XML_IDENT_RE,
				relevance: 0
			},
			{
				begin: /=\s*/,
				relevance: 0,
				contains: [
					{
						className: 'string',
						endsParent: true,
						variants: [
							{begin: /"/, end: /"/},
							{begin: /'/, end: /'/},
							{begin: /[^\s"'=<>`]+/}
						]
					}
				]
			}
		]
	};
	return {
		aliases: ['html', 'xhtml', 'rss', 'atom', 'xjb', 'xsd', 'xsl', 'plist'],
		case_insensitive: true,
		contains: [
			{
				className: 'meta',
				begin: '<!DOCTYPE', end: '>',
				relevance: 10,
				contains: [{begin: '\\[', end: '\\]'}]
			},
			hljs.COMMENT(
				'<!--',
				'-->',
				{
					relevance: 10
				}
			),
			{
				begin: '<\\!\\[CDATA\\[', end: '\\]\\]>',
				relevance: 10
			},
			{
				className: 'meta',
				begin: /<\?xml/, end: /\?>/, relevance: 10
			},
			{
				begin: /<\?(php)?/, end: /\?>/,
				subLanguage: 'php',
				contains: [
					// We don't want the php closing tag ?> to close the PHP block when
					// inside any of the following blocks:
					{begin: '/\\*', end: '\\*/', skip: true},
					{begin: 'b"', end: '"', skip: true},
					{begin: 'b\'', end: '\'', skip: true},
					hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null, className: null, contains: null, skip: true}),
					hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null, className: null, contains: null, skip: true})
				]
			},
			{
				className: 'tag',
				/*
				The lookahead pattern (?=...) ensures that 'begin' only matches
				'<style' as a single word, followed by a whitespace or an
				ending braket. The '$' is needed for the lexeme to be recognized
				by hljs.subMode() that tests lexemes outside the stream.
				*/
				begin: '<style(?=\\s|>|$)', end: '>',
				keywords: {name: 'style'},
				contains: [TAG_INTERNALS],
				starts: {
					end: '</style>', returnEnd: true,
					subLanguage: ['css', 'xml']
				}
			},
			{
				className: 'tag',
				// See the comment in the <style tag about the lookahead pattern
				begin: '<script(?=\\s|>|$)', end: '>',
				keywords: {name: 'script'},
				contains: [TAG_INTERNALS],
				starts: {
					end: '\<\/script\>', returnEnd: true,
					subLanguage: ['actionscript', 'javascript', 'handlebars', 'xml']
				}
			},
			{
				className: 'tag',
				begin: '</?', end: '/?>',
				contains: [
					{
						className: 'name', begin: /[^\/><\s]+/, relevance: 0
					},
					TAG_INTERNALS
				]
			}
		]
	};
}
);

// #END

// === web/yaml.js

/*
Language: YAML
Author: Stefan Wienert <stwienert@gmail.com>
Description: YAML (Yet Another Markdown Language)
Category: config
### modified by unixman: remove unused dependency to ruby, YAML is mostly used without it !
*/

// syntax/web/yaml.js
// HighlightJs: v.9.13.1

hljs.registerLanguage('yaml',
function(hljs) {
	var LITERALS = 'true false yes no null';

	var keyPrefix = '^[ \\-]*';
	var keyName =  '[a-zA-Z_][\\w\\-]*';
	var KEY = {
		className: 'attr',
		variants: [
			{ begin: keyPrefix + keyName + ":"},
			{ begin: keyPrefix + '"' + keyName + '"' + ":"},
			{ begin: keyPrefix + "'" + keyName + "'" + ":"}
		]
	};

	var STRING = {
		className: 'string',
		relevance: 0,
		variants: [
			{begin: /'/, end: /'/},
			{begin: /"/, end: /"/},
			{begin: /\S+/}
		],
		contains: [
			hljs.BACKSLASH_ESCAPE
		]
	};

	return {
		case_insensitive: true,
		aliases: ['yml', 'YAML', 'yaml'],
		contains: [
			KEY,
			{
				className: 'meta',
				begin: '^---\s*$',
				relevance: 10
			},
			{ // multi line string
				className: 'string',
				begin: '[\\|>] *$',
				returnEnd: true,
				contains: STRING.contains,
				// very simple termination: next hash key
				end: KEY.variants[0].begin
			},
			{ // data type
				className: 'type',
				begin: '!!' + hljs.UNDERSCORE_IDENT_RE,
			},
			{ // fragment id &ref
				className: 'meta',
				begin: '&' + hljs.UNDERSCORE_IDENT_RE + '$',
			},
			{ // fragment reference *ref
				className: 'meta',
				begin: '\\*' + hljs.UNDERSCORE_IDENT_RE + '$'
			},
			{ // array listing
				className: 'bullet',
				begin: '^ *-',
				relevance: 0
			},
			hljs.HASH_COMMENT_MODE,
			{
				beginKeywords: LITERALS,
				keywords: {literal: LITERALS}
			},
			hljs.C_NUMBER_MODE,
			STRING
		]
	};
}
);

// #END

// ===== [#]

// # JS Package: syntax-web.pak.js :: #END#


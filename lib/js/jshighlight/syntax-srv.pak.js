
// # JS Package: syntax-srv.pak.js :: #START# :: @ generated from lib/js/jshighlight/syntax/srv/*.js
// Included Files: srv/*.js #

// ### DO NOT EDIT THIS FILE AS IT WILL BE OVERWRITTEN EACH TIME THE INCLUDED SCRIPTS WILL CHANGE !!! ###

// === srv/accesslog.js

/*
 Language: Access log
 Author: Oleg Efimov <efimovov@gmail.com>
 Description: Apache/Nginx Access Logs
 */

// syntax/srv/accesslog.js
// HighlightJs: v.9.13.1

hljs.registerLanguage('accesslog',
function(hljs) {
	return {
		contains: [
			// IP
			{
				className: 'number',
				begin: '\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b'
			},
			// Other numbers
			{
				className: 'number',
				begin: '\\b\\d+\\b',
				relevance: 0
			},
			// Requests
			{
				className: 'string',
				begin: '"(GET|POST|HEAD|PUT|DELETE|CONNECT|OPTIONS|PATCH|TRACE)', end: '"',
				keywords: 'GET POST HEAD PUT DELETE CONNECT OPTIONS PATCH TRACE',
				illegal: '\\n',
				relevance: 10
			},
			// Dates
			{
				className: 'string',
				begin: /\[/, end: /\]/,
				illegal: '\\n'
			},
			// Strings
			{
				className: 'string',
				begin: '"', end: '"',
				illegal: '\\n'
			}
		]
	};
}
);

// #END

// === srv/apache.js

/*
Language: Apache
Author: Ruslan Keba <rukeba@gmail.com>
Contributors: Ivan Sagalaev <maniac@softwaremaniacs.org>
Website: http://rukeba.com/
Description: language definition for Apache configuration files (httpd.conf & .htaccess)
Category: common, config
*/

// syntax/srv/apache.js
// HighlightJs: v.9.13.1

hljs.registerLanguage('apache',
function(hljs) {
	var NUMBER = {className: 'number', begin: '[\\$%]\\d+'};
	return {
		aliases: ['apacheconf'],
		case_insensitive: true,
		contains: [
			hljs.HASH_COMMENT_MODE,
			{className: 'section', begin: '</?', end: '>'},
			{
				className: 'attribute',
				begin: /\w+/,
				relevance: 0,
				// keywords arenâ€™t needed for highlighting per se, they only boost relevance
				// for a very generally defined mode (starts with a word, ends with line-end
				keywords: {
					nomarkup:
						'order deny allow setenv rewriterule rewriteengine rewritecond documentroot ' +
						'sethandler errordocument loadmodule options header listen serverroot ' +
						'servername'
				},
				starts: {
					end: /$/,
					relevance: 0,
					keywords: {
						literal: 'on off all'
					},
					contains: [
						{
							className: 'meta',
							begin: '\\s\\[', end: '\\]$'
						},
						{
							className: 'variable',
							begin: '[\\$%]\\{', end: '\\}',
							contains: ['self', NUMBER]
						},
						NUMBER,
						hljs.QUOTE_STRING_MODE
					]
				}
			}
		],
		illegal: /\S/
	};
}
);

// #END

// === srv/dns.js

/*
Language: DNS Zone file
Author: Tim Schumacher <tim@datenknoten.me>
Category: config
*/

// syntax/srv/dns.js
// HighlightJs: v.9.13.1

hljs.registerLanguage('dns',
function(hljs) {
	return {
		aliases: ['bind', 'zone'],
		keywords: {
			keyword:
				'IN A AAAA AFSDB APL CAA CDNSKEY CDS CERT CNAME DHCID DLV DNAME DNSKEY DS HIP IPSECKEY KEY KX ' +
				'LOC MX NAPTR NS NSEC NSEC3 NSEC3PARAM PTR RRSIG RP SIG SOA SRV SSHFP TA TKEY TLSA TSIG TXT'
		},
		contains: [
			hljs.COMMENT(';', '$', {relevance: 0}),
			{
				className: 'meta',
				begin: /^\$(TTL|GENERATE|INCLUDE|ORIGIN)\b/
			},
			// IPv6
			{
				className: 'number',
				begin: '((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))\\b'
			},
			// IPv4
			{
				className: 'number',
				begin: '((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\b'
			},
			hljs.inherit(hljs.NUMBER_MODE, {begin: /\b\d+[dhwm]?/})
		]
	};
}
);

// #END

// === srv/nginx.js

/*
Language: Nginx
Author: Peter Leonov <gojpeg@yandex.ru>
Contributors: Ivan Sagalaev <maniac@softwaremaniacs.org>
Category: common, config
*/

// syntax/srv/nginx.js
// HighlightJs: v.9.13.1

hljs.registerLanguage('nginx',
function(hljs) {
	var VAR = {
		className: 'variable',
		variants: [
			{begin: /\$\d+/},
			{begin: /\$\{/, end: /}/},
			{begin: '[\\$\\@]' + hljs.UNDERSCORE_IDENT_RE}
		]
	};
	var DEFAULT = {
		endsWithParent: true,
		lexemes: '[a-z/_]+',
		keywords: {
			literal:
				'on off yes no true false none blocked debug info notice warn error crit ' +
				'select break last permanent redirect kqueue rtsig epoll poll /dev/poll'
		},
		relevance: 0,
		illegal: '=>',
		contains: [
			hljs.HASH_COMMENT_MODE,
			{
				className: 'string',
				contains: [hljs.BACKSLASH_ESCAPE, VAR],
				variants: [
					{begin: /"/, end: /"/},
					{begin: /'/, end: /'/}
				]
			},
			// this swallows entire URLs to avoid detecting numbers within
			{
				begin: '([a-z]+):/', end: '\\s', endsWithParent: true, excludeEnd: true,
				contains: [VAR]
			},
			{
				className: 'regexp',
				contains: [hljs.BACKSLASH_ESCAPE, VAR],
				variants: [
					{begin: "\\s\\^", end: "\\s|{|;", returnEnd: true},
					// regexp locations (~, ~*)
					{begin: "~\\*?\\s+", end: "\\s|{|;", returnEnd: true},
					// *.example.com
					{begin: "\\*(\\.[a-z\\-]+)+"},
					// sub.example.*
					{begin: "([a-z\\-]+\\.)+\\*"}
				]
			},
			// IP
			{
				className: 'number',
				begin: '\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b'
			},
			// units
			{
				className: 'number',
				begin: '\\b\\d+[kKmMgGdshdwy]*\\b',
				relevance: 0
			},
			VAR
		]
	};

	return {
		aliases: ['nginxconf'],
		contains: [
			hljs.HASH_COMMENT_MODE,
			{
				begin: hljs.UNDERSCORE_IDENT_RE + '\\s+{', returnBegin: true,
				end: '{',
				contains: [
					{
						className: 'section',
						begin: hljs.UNDERSCORE_IDENT_RE
					}
				],
				relevance: 0
			},
			{
				begin: hljs.UNDERSCORE_IDENT_RE + '\\s', end: ';|{', returnBegin: true,
				contains: [
					{
						className: 'attribute',
						begin: hljs.UNDERSCORE_IDENT_RE,
						starts: DEFAULT
					}
				],
				relevance: 0
			}
		],
		illegal: '[^\\s\\}]'
	};
}
);

// #END

// === srv/pf.js

/*
Language: pf
Category: config
Author: Peter Piwowarski <oldlaptop654@aol.com>
Description: The pf.conf(5) format as of OpenBSD 5.6
*/

// syntax/srv/pf.js
// HighlightJs: v.9.13.1

hljs.registerLanguage('pf',
function(hljs) {
	var MACRO = {
		className: 'variable',
		begin: /\$[\w\d#@][\w\d_]*/
	};
	var TABLE = {
		className: 'variable',
		begin: /<(?!\/)/, end: />/
	};
	var QUOTE_STRING = {
		className: 'string',
		begin: /"/, end: /"/
	};

	return {
		aliases: ['pf.conf'],
		lexemes: /[a-z0-9_<>-]+/,
		keywords: {
			built_in: /* block match pass are "actions" in pf.conf(5), the rest are
								 * lexically similar top-level commands.
								 */
				'block match pass load anchor|5 antispoof|10 set table',
			keyword:
				'in out log quick on rdomain inet inet6 proto from port os to route' +
				'allow-opts divert-packet divert-reply divert-to flags group icmp-type' +
				'icmp6-type label once probability recieved-on rtable prio queue' +
				'tos tag tagged user keep fragment for os drop' +
				'af-to|10 binat-to|10 nat-to|10 rdr-to|10 bitmask least-stats random round-robin' +
				'source-hash static-port' +
				'dup-to reply-to route-to' +
				'parent bandwidth default min max qlimit' +
				'block-policy debug fingerprints hostid limit loginterface optimization' +
				'reassemble ruleset-optimization basic none profile skip state-defaults' +
				'state-policy timeout' +
				'const counters persist' +
				'no modulate synproxy state|5 floating if-bound no-sync pflow|10 sloppy' +
				'source-track global rule max-src-nodes max-src-states max-src-conn' +
				'max-src-conn-rate overload flush' +
				'scrub|5 max-mss min-ttl no-df|10 random-id',
			literal:
				'all any no-route self urpf-failed egress|5 unknown'
		},
		contains: [
			hljs.HASH_COMMENT_MODE,
			hljs.NUMBER_MODE,
			hljs.QUOTE_STRING_MODE,
			MACRO,
			TABLE
		]
	};
}
);

// #END

// ===== [#]

// # JS Package: syntax-srv.pak.js :: #END#


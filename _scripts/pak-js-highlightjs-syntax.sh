#!/bin/sh

# PAK: Multi-Combine all HighlightJs syntax source scripts from lib/js/jshighlight/syntax/*.js into one package JS file: lib/js/jshighlight/syntax.pak.js # r.20191126

THE_FILE=../lib/js/jshighlight/syntax.pak.js

THE_FILE_WEB=../lib/js/jshighlight/syntax-web.pak.js
THE_FILE_TPL=../lib/js/jshighlight/syntax-tpl.pak.js
THE_FILE_LNX=../lib/js/jshighlight/syntax-lnx.pak.js
THE_FILE_SRV=../lib/js/jshighlight/syntax-srv.pak.js
THE_FILE_NET=../lib/js/jshighlight/syntax-net.pak.js
THE_FILE_LANG=../lib/js/jshighlight/syntax-lang.pak.js


echo "Regenerating HighlightJs Syntax Javascript Package: ${THE_FILE}"

echo "" > ${THE_FILE}
echo "// # JS Package: syntax.pak.js :: #START# :: @ generated from lib/js/jshighlight/syntax/*.js" >> ${THE_FILE}
echo "// Included Files: web/*.js ; tpl/*.js ; lnx/*.js ; srv/*.js ; net/*.js ; lang/*.js #" >> ${THE_FILE}
echo "" >> ${THE_FILE}
echo "// ### DO NOT EDIT THIS FILE AS IT WILL BE OVERWRITTEN EACH TIME THE INCLUDED SCRIPTS WILL CHANGE !!! ###" >> ${THE_FILE}
echo "" >> ${THE_FILE}


#
SYNTAX_TYPE_SUB=web
SYNTAX_FILE_SUB="${THE_FILE_WEB}"
#
echo "=== Regenerating HighlightJs Syntax[${SYNTAX_TYPE_SUB}] Javascript Package: ${SYNTAX_FILE_SUB} ==="
echo "" > ${SYNTAX_FILE_SUB}
echo "// # JS Package: syntax-${SYNTAX_TYPE_SUB}.pak.js :: #START# :: @ generated from lib/js/jshighlight/syntax/${SYNTAX_TYPE_SUB}/*.js" >> ${SYNTAX_FILE_SUB}
echo "// Included Files: ${SYNTAX_TYPE_SUB}/*.js #" >> ${SYNTAX_FILE_SUB}
echo "" >> ${SYNTAX_FILE_SUB}
echo "// ### DO NOT EDIT THIS FILE AS IT WILL BE OVERWRITTEN EACH TIME THE INCLUDED SCRIPTS WILL CHANGE !!! ###" >> ${SYNTAX_FILE_SUB}
echo "" >> ${SYNTAX_FILE_SUB}
SYNTAX_JS_SUB=`ls -A ../lib/js/jshighlight/syntax/${SYNTAX_TYPE_SUB}/*.js`
for i in $SYNTAX_JS_SUB; do
	if [ -f "${i}" ]; then
		#==
		BASE_FILE=`basename "${i}"`
		echo "Javascript: ${SYNTAX_TYPE_SUB}/${BASE_FILE}"
		#==
		echo "// === ${SYNTAX_TYPE_SUB}/${BASE_FILE}" >> ${SYNTAX_FILE_SUB}
		echo "" >> ${SYNTAX_FILE_SUB}
		cat ${i} >> ${SYNTAX_FILE_SUB}
		echo "" >> ${SYNTAX_FILE_SUB}
		#==
		echo "// === ${SYNTAX_TYPE_SUB}/${BASE_FILE}" >> ${THE_FILE}
		echo "" >> ${THE_FILE}
		cat ${i} >> ${THE_FILE}
		echo "" >> ${THE_FILE}
		#==
	else
		#==
		echo "FAIL: ${i} is not a file for ${SYNTAX_TYPE_SUB}"
		#==
	fi
done
echo "// ===== [#]" >> ${SYNTAX_FILE_SUB}
echo "" >> ${SYNTAX_FILE_SUB}
echo "// # JS Package: syntax-${SYNTAX_TYPE_SUB}.pak.js :: #END#" >> ${SYNTAX_FILE_SUB}
echo "" >> ${SYNTAX_FILE_SUB}
#


#
SYNTAX_TYPE_SUB=tpl
SYNTAX_FILE_SUB="${THE_FILE_TPL}"
#
echo "Regenerating HighlightJs Syntax[${SYNTAX_TYPE_SUB}] Javascript Package: ${SYNTAX_FILE_SUB}"
echo "" > ${SYNTAX_FILE_SUB}
echo "// # JS Package: syntax-${SYNTAX_TYPE_SUB}.pak.js :: #START# :: @ generated from lib/js/jshighlight/syntax/${SYNTAX_TYPE_SUB}/*.js" >> ${SYNTAX_FILE_SUB}
echo "// Included Files: ${SYNTAX_TYPE_SUB}/*.js #" >> ${SYNTAX_FILE_SUB}
echo "" >> ${SYNTAX_FILE_SUB}
echo "// ### DO NOT EDIT THIS FILE AS IT WILL BE OVERWRITTEN EACH TIME THE INCLUDED SCRIPTS WILL CHANGE !!! ###" >> ${SYNTAX_FILE_SUB}
echo "" >> ${SYNTAX_FILE_SUB}
SYNTAX_JS_SUB=`ls -A ../lib/js/jshighlight/syntax/${SYNTAX_TYPE_SUB}/*.js`
for i in $SYNTAX_JS_SUB; do
	if [ -f "${i}" ]; then
		#==
		BASE_FILE=`basename "${i}"`
		echo "Javascript: ${SYNTAX_TYPE_SUB}/${BASE_FILE}"
		#==
		echo "// === ${SYNTAX_TYPE_SUB}/${BASE_FILE}" >> ${SYNTAX_FILE_SUB}
		echo "" >> ${SYNTAX_FILE_SUB}
		cat ${i} >> ${SYNTAX_FILE_SUB}
		echo "" >> ${SYNTAX_FILE_SUB}
		#==
		echo "// === ${SYNTAX_TYPE_SUB}/${BASE_FILE}" >> ${THE_FILE}
		echo "" >> ${THE_FILE}
		cat ${i} >> ${THE_FILE}
		echo "" >> ${THE_FILE}
		#==
	else
		#==
		echo "FAIL: ${i} is not a file for ${SYNTAX_TYPE_SUB}"
		#==
	fi
done
echo "// ===== [#]" >> ${SYNTAX_FILE_SUB}
echo "" >> ${SYNTAX_FILE_SUB}
echo "// # JS Package: syntax-${SYNTAX_TYPE_SUB}.pak.js :: #END#" >> ${SYNTAX_FILE_SUB}
echo "" >> ${SYNTAX_FILE_SUB}
#


#
SYNTAX_TYPE_SUB=lnx
SYNTAX_FILE_SUB="${THE_FILE_LNX}"
#
echo "Regenerating HighlightJs Syntax[${SYNTAX_TYPE_SUB}] Javascript Package: ${SYNTAX_FILE_SUB}"
echo "" > ${SYNTAX_FILE_SUB}
echo "// # JS Package: syntax-${SYNTAX_TYPE_SUB}.pak.js :: #START# :: @ generated from lib/js/jshighlight/syntax/${SYNTAX_TYPE_SUB}/*.js" >> ${SYNTAX_FILE_SUB}
echo "// Included Files: ${SYNTAX_TYPE_SUB}/*.js #" >> ${SYNTAX_FILE_SUB}
echo "" >> ${SYNTAX_FILE_SUB}
echo "// ### DO NOT EDIT THIS FILE AS IT WILL BE OVERWRITTEN EACH TIME THE INCLUDED SCRIPTS WILL CHANGE !!! ###" >> ${SYNTAX_FILE_SUB}
echo "" >> ${SYNTAX_FILE_SUB}
SYNTAX_JS_SUB=`ls -A ../lib/js/jshighlight/syntax/${SYNTAX_TYPE_SUB}/*.js`
for i in $SYNTAX_JS_SUB; do
	if [ -f "${i}" ]; then
		#==
		BASE_FILE=`basename "${i}"`
		echo "Javascript: ${SYNTAX_TYPE_SUB}/${BASE_FILE}"
		#==
		echo "// === ${SYNTAX_TYPE_SUB}/${BASE_FILE}" >> ${SYNTAX_FILE_SUB}
		echo "" >> ${SYNTAX_FILE_SUB}
		cat ${i} >> ${SYNTAX_FILE_SUB}
		echo "" >> ${SYNTAX_FILE_SUB}
		#==
		echo "// === ${SYNTAX_TYPE_SUB}/${BASE_FILE}" >> ${THE_FILE}
		echo "" >> ${THE_FILE}
		cat ${i} >> ${THE_FILE}
		echo "" >> ${THE_FILE}
		#==
	else
		#==
		echo "FAIL: ${i} is not a file for ${SYNTAX_TYPE_SUB}"
		#==
	fi
done
echo "// ===== [#]" >> ${SYNTAX_FILE_SUB}
echo "" >> ${SYNTAX_FILE_SUB}
echo "// # JS Package: syntax-${SYNTAX_TYPE_SUB}.pak.js :: #END#" >> ${SYNTAX_FILE_SUB}
echo "" >> ${SYNTAX_FILE_SUB}
#


#
SYNTAX_TYPE_SUB=srv
SYNTAX_FILE_SUB="${THE_FILE_SRV}"
#
echo "Regenerating HighlightJs Syntax[${SYNTAX_TYPE_SUB}] Javascript Package: ${SYNTAX_FILE_SUB}"
echo "" > ${SYNTAX_FILE_SUB}
echo "// # JS Package: syntax-${SYNTAX_TYPE_SUB}.pak.js :: #START# :: @ generated from lib/js/jshighlight/syntax/${SYNTAX_TYPE_SUB}/*.js" >> ${SYNTAX_FILE_SUB}
echo "// Included Files: ${SYNTAX_TYPE_SUB}/*.js #" >> ${SYNTAX_FILE_SUB}
echo "" >> ${SYNTAX_FILE_SUB}
echo "// ### DO NOT EDIT THIS FILE AS IT WILL BE OVERWRITTEN EACH TIME THE INCLUDED SCRIPTS WILL CHANGE !!! ###" >> ${SYNTAX_FILE_SUB}
echo "" >> ${SYNTAX_FILE_SUB}
SYNTAX_JS_SUB=`ls -A ../lib/js/jshighlight/syntax/${SYNTAX_TYPE_SUB}/*.js`
for i in $SYNTAX_JS_SUB; do
	if [ -f "${i}" ]; then
		#==
		BASE_FILE=`basename "${i}"`
		echo "Javascript: ${SYNTAX_TYPE_SUB}/${BASE_FILE}"
		#==
		echo "// === ${SYNTAX_TYPE_SUB}/${BASE_FILE}" >> ${SYNTAX_FILE_SUB}
		echo "" >> ${SYNTAX_FILE_SUB}
		cat ${i} >> ${SYNTAX_FILE_SUB}
		echo "" >> ${SYNTAX_FILE_SUB}
		#==
		echo "// === ${SYNTAX_TYPE_SUB}/${BASE_FILE}" >> ${THE_FILE}
		echo "" >> ${THE_FILE}
		cat ${i} >> ${THE_FILE}
		echo "" >> ${THE_FILE}
		#==
	else
		#==
		echo "FAIL: ${i} is not a file for ${SYNTAX_TYPE_SUB}"
		#==
	fi
done
echo "// ===== [#]" >> ${SYNTAX_FILE_SUB}
echo "" >> ${SYNTAX_FILE_SUB}
echo "// # JS Package: syntax-${SYNTAX_TYPE_SUB}.pak.js :: #END#" >> ${SYNTAX_FILE_SUB}
echo "" >> ${SYNTAX_FILE_SUB}
#


#
SYNTAX_TYPE_SUB=net
SYNTAX_FILE_SUB="${THE_FILE_NET}"
#
echo "Regenerating HighlightJs Syntax[${SYNTAX_TYPE_SUB}] Javascript Package: ${SYNTAX_FILE_SUB}"
echo "" > ${SYNTAX_FILE_SUB}
echo "// # JS Package: syntax-${SYNTAX_TYPE_SUB}.pak.js :: #START# :: @ generated from lib/js/jshighlight/syntax/${SYNTAX_TYPE_SUB}/*.js" >> ${SYNTAX_FILE_SUB}
echo "// Included Files: ${SYNTAX_TYPE_SUB}/*.js #" >> ${SYNTAX_FILE_SUB}
echo "" >> ${SYNTAX_FILE_SUB}
echo "// ### DO NOT EDIT THIS FILE AS IT WILL BE OVERWRITTEN EACH TIME THE INCLUDED SCRIPTS WILL CHANGE !!! ###" >> ${SYNTAX_FILE_SUB}
echo "" >> ${SYNTAX_FILE_SUB}
SYNTAX_JS_SUB=`ls -A ../lib/js/jshighlight/syntax/${SYNTAX_TYPE_SUB}/*.js`
for i in $SYNTAX_JS_SUB; do
	if [ -f "${i}" ]; then
		#==
		BASE_FILE=`basename "${i}"`
		echo "Javascript: ${SYNTAX_TYPE_SUB}/${BASE_FILE}"
		#==
		echo "// === ${SYNTAX_TYPE_SUB}/${BASE_FILE}" >> ${SYNTAX_FILE_SUB}
		echo "" >> ${SYNTAX_FILE_SUB}
		cat ${i} >> ${SYNTAX_FILE_SUB}
		echo "" >> ${SYNTAX_FILE_SUB}
		#==
		echo "// === ${SYNTAX_TYPE_SUB}/${BASE_FILE}" >> ${THE_FILE}
		echo "" >> ${THE_FILE}
		cat ${i} >> ${THE_FILE}
		echo "" >> ${THE_FILE}
		#==
	else
		#==
		echo "FAIL: ${i} is not a file for ${SYNTAX_TYPE_SUB}"
		#==
	fi
done
echo "// ===== [#]" >> ${SYNTAX_FILE_SUB}
echo "" >> ${SYNTAX_FILE_SUB}
echo "// # JS Package: syntax-${SYNTAX_TYPE_SUB}.pak.js :: #END#" >> ${SYNTAX_FILE_SUB}
echo "" >> ${SYNTAX_FILE_SUB}
#


#
SYNTAX_TYPE_SUB=lang
SYNTAX_FILE_SUB="${THE_FILE_LANG}"
#
echo "Regenerating HighlightJs Syntax[${SYNTAX_TYPE_SUB}] Javascript Package: ${SYNTAX_FILE_SUB}"
echo "" > ${SYNTAX_FILE_SUB}
echo "// # JS Package: syntax-${SYNTAX_TYPE_SUB}.pak.js :: #START# :: @ generated from lib/js/jshighlight/syntax/${SYNTAX_TYPE_SUB}/*.js" >> ${SYNTAX_FILE_SUB}
echo "// Included Files: ${SYNTAX_TYPE_SUB}/*.js #" >> ${SYNTAX_FILE_SUB}
echo "" >> ${SYNTAX_FILE_SUB}
echo "// ### DO NOT EDIT THIS FILE AS IT WILL BE OVERWRITTEN EACH TIME THE INCLUDED SCRIPTS WILL CHANGE !!! ###" >> ${SYNTAX_FILE_SUB}
echo "" >> ${SYNTAX_FILE_SUB}
SYNTAX_JS_SUB=`ls -A ../lib/js/jshighlight/syntax/${SYNTAX_TYPE_SUB}/*.js`
for i in $SYNTAX_JS_SUB; do
	if [ -f "${i}" ]; then
		#==
		BASE_FILE=`basename "${i}"`
		echo "Javascript: ${SYNTAX_TYPE_SUB}/${BASE_FILE}"
		#==
		echo "// === ${SYNTAX_TYPE_SUB}/${BASE_FILE}" >> ${SYNTAX_FILE_SUB}
		echo "" >> ${SYNTAX_FILE_SUB}
		cat ${i} >> ${SYNTAX_FILE_SUB}
		echo "" >> ${SYNTAX_FILE_SUB}
		#==
		echo "// === ${SYNTAX_TYPE_SUB}/${BASE_FILE}" >> ${THE_FILE}
		echo "" >> ${THE_FILE}
		cat ${i} >> ${THE_FILE}
		echo "" >> ${THE_FILE}
		#==
	else
		#==
		echo "FAIL: ${i} is not a file for ${SYNTAX_TYPE_SUB}"
		#==
	fi
done
echo "// ===== [#]" >> ${SYNTAX_FILE_SUB}
echo "" >> ${SYNTAX_FILE_SUB}
echo "// # JS Package: syntax-${SYNTAX_TYPE_SUB}.pak.js :: #END#" >> ${SYNTAX_FILE_SUB}
echo "" >> ${SYNTAX_FILE_SUB}
#


echo "// ===== [#]" >> ${THE_FILE}
echo "" >> ${THE_FILE}
echo "// # JS Package: syntax.pak.js :: #END#" >> ${THE_FILE}
echo "" >> ${THE_FILE}

echo "=== [DONE !] ==="

# END
